{
  "address": "0x3B02036eb12cC44b1a1A4e623Ec3a361c0e09cbe",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "CreatedMomentNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int8",
          "name": "_timeZoneHour",
          "type": "int8"
        },
        {
          "internalType": "int8",
          "name": "_timeZoneMin",
          "type": "int8"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getOwnerOfNFTId",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getTimeZone",
      "outputs": [
        {
          "internalType": "int8",
          "name": "UCThourOffset",
          "type": "int8"
        },
        {
          "internalType": "int8",
          "name": "UCTMinOffset",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserNFTTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfNFTId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int8",
          "name": "_timeZoneHour",
          "type": "int8"
        },
        {
          "internalType": "int8",
          "name": "_timeZoneMin",
          "type": "int8"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "setTimeZone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeZoneHour",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeZoneMin",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNFTTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1de6822a10bf6a51f544ff20b1febe3ef38408b69a5ba071cd9d5d6adee361bf",
  "receipt": {
    "to": null,
    "from": "0xCDa5971084562774cEbEac709139EC45ca3160dc",
    "contractAddress": "0x3B02036eb12cC44b1a1A4e623Ec3a361c0e09cbe",
    "transactionIndex": 42,
    "gasUsed": "4161569",
    "logsBloom": "0x
    "blockHash": "0x1bbac114c77cf6f3b6caeec149874e81196cc7e1fd5de59f8a3a7694930ef5e8",
    "transactionHash": "0x1de6822a10bf6a51f544ff20b1febe3ef38408b69a5ba071cd9d5d6adee361bf",
    "logs": [
      {
        "transactionIndex": 42,
        "blockNumber": 27373484,
        "transactionHash": "0x1de6822a10bf6a51f544ff20b1febe3ef38408b69a5ba071cd9d5d6adee361bf",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cda5971084562774cebeac709139ec45ca3160dc",
          "0x00000000000000000000000026c80cc193b27d73d2c40943acec77f4da2c5bd8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001d4b5eed1e480ac0000000000000000000000000000000000000000000000000eadbbb4e70ebccc000000000000000000000000000000000000000000001ea8f610af368a9a8eaa0000000000000000000000000000000000000000000000000cd905c6152a3c20000000000000000000000000000000000000000000001ea8f7e565255c7f0f56",
        "logIndex": 647,
        "blockHash": "0x1bbac114c77cf6f3b6caeec149874e81196cc7e1fd5de59f8a3a7694930ef5e8"
      }
    ],
    "blockNumber": 27373484,
    "cumulativeGasUsed": "24443160",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "6bf0bd65d84facc06dd5548f26ff4b9f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CreatedMomentNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"_timeZoneHour\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"_timeZoneMin\",\"type\":\"int8\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOwnerOfNFTId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getTimeZone\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"UCThourOffset\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"UCTMinOffset\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserNFTTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOfNFTId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"_timeZoneHour\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"_timeZoneMin\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setTimeZone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timeZoneHour\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timeZoneMin\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNFTTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/momentNFT.sol\":\"momentNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(owner != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x06e377f5355b04b8b35b89c5073c3765b034b133b1b6136c44f7e8035aa58935\",\"license\":\"AGPL-3.0-only\"},\"contracts/momentNFT.sol\":{\"content\":\"\\npragma solidity ^0.8.0;\\n\\nimport \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract momentNFT is ERC721 {\\n\\n  uint256 public immutable claimPrice = 10 ether; \\n  address public immutable withdrawAddress = 0x245E32DbA4E30b483F618A3940309236AaEbBbC5 ;\\n  uint public tokenCounter; \\n  uint32 constant SECONDS_PER_DAY = 24 * 60 * 60;\\n  uint16 constant SECONDS_PER_HOUR = 60 * 60;\\n  uint8 constant SECONDS_PER_MINUTE = 60;\\n  string constant svgTop =' <svg width=\\\"400\\\" height=\\\"400\\\" viewBox=\\\"0 0 400 400\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">    <def>      <style>      .minute-arm {        fill: none;        stroke: #A3A3A3;        stroke-width: 6;        stroke-miterlimit: 8;      }      .hour-arm {        fill: none;        stroke: #fff;        stroke-width: 6;        stroke-miterlimit: 8;      }      #minute,#hour {        transform-origin: 200px 200px;      }    </style>    </def>    <rect width=\\\"400\\\" height=\\\"400\\\" fill=\\\"white\\\" />    <circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"147\\\" stroke=\\\"black\\\" stroke-width=\\\"6\\\" />    <circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"145\\\" fill=\\\"black\\\" stroke=\\\"#393939\\\" stroke-width=\\\"2\\\" />    <mask id=\\\"mask0_7_61\\\" style=\\\"mask-type:alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"61\\\" y=\\\"61\\\" width=\\\"278\\\" height=\\\"278\\\">      <rect x=\\\"198\\\" y=\\\"61\\\" width=\\\"4\\\" height=\\\"38\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"198\\\" y=\\\"301\\\" width=\\\"4\\\" height=\\\"38\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"61\\\" y=\\\"202\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-90 61 202)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"301\\\" y=\\\"202\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-90 301 202)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"132.232\\\" y=\\\"321.378\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-150 132.232 321.378)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"252.232\\\" y=\\\"113.531\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-150 252.232 113.531)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"80.6224\\\" y=\\\"271.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-120 80.6224 271.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"288.469\\\" y=\\\"151.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-120 288.469 151.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"78.6224\\\" y=\\\"132.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-60 78.6224 132.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"286.469\\\" y=\\\"252.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-60 286.469 252.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"271.232\\\" y=\\\"319.378\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(150 271.232 319.378)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"151.232\\\" y=\\\"111.531\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(150 151.232 111.531)\\\" fill=\\\"#C4C4C4\\\" />    </mask>    <g mask=\\\"url(#mask0_7_61)\\\">      <mask id=\\\"mask1_7_61\\\" style=\\\"mask-type:alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"45\\\" y=\\\"41\\\" width=\\\"324\\\" height=\\\"316\\\">        <rect x=\\\"45\\\" y=\\\"41\\\" width=\\\"324\\\" height=\\\"316\\\" fill=\\\"url(#paint0_linear_7_61)\\\" />      </mask>      <g mask=\\\"url(#mask1_7_61)\\\">        <rect x=\\\"13\\\" y=\\\"9\\\" width=\\\"387\\\" height=\\\"359\\\" fill=\\\"#F584FF\\\" />        <g filter=\\\"url(#filter0_f_7_61)\\\">          <circle cx=\\\"82.5\\\" cy=\\\"117.5\\\" r=\\\"117.5\\\" fill=\\\"#FF84CE\\\" />        </g>        <g filter=\\\"url(#filter1_f_7_61)\\\">          <circle cx=\\\"349.5\\\" cy=\\\"239.5\\\" r=\\\"117.5\\\" fill=\\\"#84A7FF\\\" />        </g>        <g filter=\\\"url(#filter2_f_7_61)\\\">          <circle cx=\\\"113.5\\\" cy=\\\"345.5\\\" r=\\\"117.5\\\" fill=\\\"#E09191\\\" />        </g>      </g>    </g> ';\\n  string constant svgBot ='<circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"5\\\" fill=\\\"white\\\" />    <defs>      <filter id=\\\"filter0_f_7_61\\\" x=\\\"-135\\\" y=\\\"-100\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <filter id=\\\"filter1_f_7_61\\\" x=\\\"132\\\" y=\\\"22\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <filter id=\\\"filter2_f_7_61\\\" x=\\\"-104\\\" y=\\\"128\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <linearGradient id=\\\"paint0_linear_7_61\\\" x1=\\\"207\\\" y1=\\\"41\\\" x2=\\\"207\\\" y2=\\\"357\\\" gradientUnits=\\\"userSpaceOnUse\\\">        <stop stop-color=\\\"#FF84CE\\\" />        <stop offset=\\\"1\\\" stop-color=\\\"#923DFF\\\" />      </linearGradient>    </defs>  </svg>'; \\n  \\n  mapping(address => bool) public claimed;\\n  mapping(address => uint256) public userNFTTokenId;\\n  mapping(uint256 => address) public ownerOfNFTId;\\n  mapping (uint256 => int8) public timeZoneHour; \\n  mapping (uint256 => int8) public timeZoneMin; \\n\\n  event CreatedMomentNFT(uint256 indexed tokenId);\\n\\n  constructor() ERC721 (\\\"MomentNFT\\\", \\\"momentNFT\\\") {\\n    tokenCounter = 0 ;\\n   }\\n\\n  function create(int8 _timeZoneHour, int8 _timeZoneMin) public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    require(claimed[msg.sender] == false, \\\"Already Claimed\\\");\\n    _safeMint(msg.sender, tokenCounter);\\n    setTimeZone(_timeZoneHour,_timeZoneMin,tokenCounter) ; \\n    claimed[msg.sender] = true;\\n    userNFTTokenId[msg.sender] = tokenCounter ; \\n    ownerOfNFTId[tokenCounter] = msg.sender ; \\n    emit CreatedMomentNFT(tokenCounter);\\n    tokenCounter = tokenCounter + 1 ; \\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(msg.sender).transfer(refund);\\n    }\\n  }\\n\\n  function withdraw() public {\\n    payable(withdrawAddress).transfer(address(this).balance);\\n  }\\n\\n  function getUserNFTTokenId(address _userAddress) public view returns (uint256 tokenId){\\n    return userNFTTokenId[_userAddress];\\n  }\\n\\n  function getOwnerOfNFTId(uint256 _id) public view returns (address owner){\\n    return ownerOfNFTId[_id];\\n  }\\n\\n  function setTimeZone(int8 _timeZoneHour,int8 _timeZoneMin, uint _id) public{\\n    timeZoneHour[_id] = _timeZoneHour ;\\n    timeZoneMin[_id] = _timeZoneMin ;  \\n  }\\n\\n  function getTimeZone(uint256 _id) public view returns (int8 UCThourOffset, int8 UCTMinOffset){\\n    return (timeZoneHour[_id] ,  timeZoneMin[_id]) ;\\n  }\\n\\n  function abs(int a) internal pure returns (uint){\\n        return a >= 0 ? uint(a) : uint(0-a);\\n    }\\n\\n  function tokenURI(uint256 _id) public view override returns (string memory) {\\n    int hr = int(getHour(block.timestamp)) + timeZoneHour[_id] + (timeZoneMin[_id] /60) ; \\n    if (hr<0) {\\n      hr = 24+hr;\\n    }\\n    int min = int(getMinute(block.timestamp)) + timeZoneMin[_id];\\n    int sec = int(getSecond(block.timestamp)) ;\\n    int hrPosition = (hr * 360) / 12 + (min * (360 / 60)) / 12 ;\\n    int minPosition = (min * 360) / 60 + (sec * (360 / 60)) / 60;\\n    string memory sHrPosition = Strings.toString(uint(hrPosition)) ; \\n    string memory sMinPosition = Strings.toString(uint(minPosition)) ; \\n\\n    string memory sTokenId = Strings.toString(_id) ;  \\n    string memory sTimeZoneHour = Strings.toString(uint(abs(timeZoneHour[_id]))) ; \\n    string memory sTimeZoneHourSign ;\\n    if (timeZoneHour[_id]>0) {\\n      sTimeZoneHourSign = \\\"+\\\"; \\n    } else {\\n      sTimeZoneHourSign = \\\"-\\\"; \\n    }\\n\\n    string memory svgMid = string(abi.encodePacked(' <g id=\\\"minute\\\" transform = \\\"rotate(',sMinPosition,'  )\\\">      <path class=\\\"minute-arm\\\" d=\\\"M200 200V78\\\" />      <circle class=\\\"sizing-box\\\" cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"130\\\" />    </g>    <g id=\\\"hour\\\" transform = \\\"rotate(',sHrPosition,'  )\\\">      <path class=\\\"hour-arm\\\" d=\\\"M200 200V140\\\" />      <circle class=\\\"sizing-box\\\" cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"130\\\" />    </g>  '));\\n    string memory svg = string(abi.encodePacked(svgTop, svgMid, svgBot )) ; \\n    string memory json = base64(bytes(abi.encodePacked('{\\\"name\\\": \\\"MomentNFT ',sTokenId,'\\\", \\\"description\\\": \\\"Fully on-chain clock NFT that shows you the current time. Time zone set to UTC',sTimeZoneHourSign,sTimeZoneHour,'\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,',base64(bytes(svg)) ,'\\\"}')));\\n    return string(abi.encodePacked('data:application/json;base64,', json));\\n  }\\n\\n  function getHour(uint timestamp) internal pure returns (uint hour) {\\n        uint secs = timestamp % SECONDS_PER_DAY;\\n        hour = secs / SECONDS_PER_HOUR;\\n    }\\n\\n  function getMinute(uint timestamp) internal pure returns (uint minute) {\\n        uint secs = timestamp % SECONDS_PER_HOUR;\\n        minute = secs / SECONDS_PER_MINUTE;\\n    }\\n\\n  function getSecond(uint timestamp) internal pure returns (uint second) {\\n        second = timestamp % SECONDS_PER_MINUTE;\\n    }\\n\\n  function base64(bytes memory data) internal pure returns (string memory) {\\n    bytes memory TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    uint256 len = data.length;\\n    if (len == 0) return \\\"\\\";\\n\\n    uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n    bytes memory result = new bytes(encodedLen + 32);\\n\\n    bytes memory table = TABLE;\\n\\n    assembly {\\n      let tablePtr := add(table, 1)\\n      let resultPtr := add(result, 32)\\n\\n      for {\\n        let i := 0\\n      } lt(i, len) {\\n\\n      } {\\n        i := add(i, 3)\\n        let input := and(mload(add(data, i)), 0xffffff)\\n\\n        let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n        out := shl(224, out)\\n\\n        mstore(resultPtr, out)\\n\\n        resultPtr := add(resultPtr, 4)\\n      }\\n\\n      switch mod(len, 3)\\n      case 1 {\\n          mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n          mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n\\n      mstore(result, encodedLen)\\n    }\\n\\n    return string(result);\\n  }\\n}\",\"keccak256\":\"0xd79714db99519b8089c7feaa00395f4db42dd0a749a72f78f33b405e82526ea2\"}},\"version\":1}",
  "bytecode": "0x60c0604052678ac7230489e8000060809081525073245e32dba4e30b483f618a3940309236aaebbbc573ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff168152503480156200006757600080fd5b506040518060400160405280600981526020017f4d6f6d656e744e465400000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f6d6f6d656e744e465400000000000000000000000000000000000000000000008152508160009080519060200190620000ec92919062000116565b5080600190805190602001906200010592919062000116565b50505060006006819055506200022b565b8280546200012490620001f5565b90600052602060002090601f01602090048101928262000148576000855562000194565b82601f106200016357805160ff191683800117855562000194565b8280016001018555821562000194579182015b828111156200019357825182559160200191906001019062000176565b5b509050620001a39190620001a7565b5090565b5b80821115620001c2576000816000905550600101620001a8565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200020e57607f821691505b60208210811415620002255762000224620001c6565b5b50919050565b60805160a05161498f6200026660003960008181610a360152610f0c015260008181610a5a015281816118670152611aae015261498f6000f3fe60806040526004361061019c5760003560e01c80636352211e116100ec578063c87b56dd1161008a578063ce9ecbd111610064578063ce9ecbd11461064b578063d082e38114610674578063db819ade1461069f578063e985e9c5146106bb5761019c565b8063c87b56dd14610594578063c884ef83146105d1578063cdc1d7921461060e5761019c565b80637c6d56a6116100c65780637c6d56a6146104da57806395d89b4114610517578063a22cb46514610542578063b88d4fde1461056b5761019c565b80636352211e14610423578063679133401461046057806370a082311461049d5761019c565b806323b872dd116101595780633afbf251116101335780633afbf251146103695780633ccfd60b146103a65780633fb2b692146103bd57806342842e0e146103fa5761019c565b806323b872dd146102c557806328134e23146102ee5780633af9e89c1461032c5761019c565b806301ffc9a7146101a157806306fdde03146101de578063081812fc14610209578063095ea7b3146102465780631581b6001461026f57806315d655c91461029a575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c391906122b6565b6106f8565b6040516101d591906122fe565b60405180910390f35b3480156101ea57600080fd5b506101f361078a565b60405161020091906123b2565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b919061240a565b610818565b60405161023d9190612478565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906124bf565b61084b565b005b34801561027b57600080fd5b50610284610a34565b6040516102919190612478565b60405180910390f35b3480156102a657600080fd5b506102af610a58565b6040516102bc919061250e565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190612529565b610a7c565b005b3480156102fa57600080fd5b506103156004803603810190610310919061240a565b610e7c565b604051610323929190612598565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e919061240a565b610eca565b60405161036091906125c1565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b919061240a565b610eea565b60405161039d91906125c1565b60405180910390f35b3480156103b257600080fd5b506103bb610f0a565b005b3480156103c957600080fd5b506103e460048036038101906103df91906125dc565b610f73565b6040516103f1919061250e565b60405180910390f35b34801561040657600080fd5b50610421600480360381019061041c9190612529565b610f8b565b005b34801561042f57600080fd5b5061044a6004803603810190610445919061240a565b6110c3565b6040516104579190612478565b60405180910390f35b34801561046c57600080fd5b506104876004803603810190610482919061240a565b6110f6565b6040516104949190612478565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf91906125dc565b611133565b6040516104d1919061250e565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc91906125dc565b61114b565b60405161050e919061250e565b60405180910390f35b34801561052357600080fd5b5061052c611194565b60405161053991906123b2565b60405180910390f35b34801561054e57600080fd5b5061056960048036038101906105649190612635565b611222565b005b34801561057757600080fd5b50610592600480360381019061058d91906127aa565b61131f565b005b3480156105a057600080fd5b506105bb60048036038101906105b6919061240a565b61145a565b6040516105c891906123b2565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f391906125dc565b6117a9565b60405161060591906122fe565b60405180910390f35b34801561061a57600080fd5b506106356004803603810190610630919061240a565b6117c9565b6040516106429190612478565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190612859565b6117fc565b005b34801561068057600080fd5b5061068961185f565b604051610696919061250e565b60405180910390f35b6106b960048036038101906106b491906128ac565b611865565b005b3480156106c757600080fd5b506106e260048036038101906106dd91906128ec565b611b30565b6040516106ef91906122fe565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107835750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546107979061295b565b80601f01602080910402602001604051908101604052809291908181526020018280546107c39061295b565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109435750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610979906129d9565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490612a45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490612ab1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c4d5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610cb657506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906129d9565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080600a600084815260200190815260200160002060009054906101000a900460000b600b600085815260200190815260200160002060009054906101000a900460000b91509150915091565b600a6020528060005260406000206000915054906101000a900460000b81565b600b6020528060005260406000206000915054906101000a900460000b81565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f70573d6000803e3d6000fd5b50565b60086020528060005260406000206000915090505481565b610f96838383610a7c565b60008273ffffffffffffffffffffffffffffffffffffffff163b148061107f575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161101b93929190612b08565b6020604051808303816000875af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612be0565b60405180910390fd5b505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546111a19061295b565b80601f01602080910402602001604051908101604052809291908181526020018280546111cd9061295b565b801561121a5780601f106111ef5761010080835404028352916020019161121a565b820191906000526020600020905b8154815290600101906020018083116111fd57829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161131391906122fe565b60405180910390a35050565b61132a848484610a7c565b60008373ffffffffffffffffffffffffffffffffffffffff163b1480611415575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016113b19493929190612c44565b6020604051808303816000875af11580156113d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f49190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144b90612be0565b60405180910390fd5b50505050565b60606000603c600b600085815260200190815260200160002060009054906101000a900460000b61148b9190612cee565b60000b600a600085815260200190815260200160002060009054906101000a900460000b60000b6114bb42611b5f565b6114c59190612d62565b6114cf9190612d62565b905060008112156114ea578060186114e79190612d62565b90505b6000600b600085815260200190815260200160002060009054906101000a900460000b60000b61151942611b93565b6115239190612d62565b9050600061153042611bc2565b90506000600c6006846115439190612df6565b61154d9190612f0d565b600c6101688661155d9190612df6565b6115679190612f0d565b6115719190612d62565b90506000603c6006846115849190612df6565b61158e9190612f0d565b603c6101688661159e9190612df6565b6115a89190612f0d565b6115b29190612d62565b905060006115bf83611bdb565b905060006115cc83611bdb565b905060006115d98a611bdb565b9050600061161161160c600a60008e815260200190815260200160002060009054906101000a900460000b60000b611d3c565b611bdb565b905060606000600a60008e815260200190815260200160002060009054906101000a900460000b60000b131561167e576040518060400160405280600181526020017f2b0000000000000000000000000000000000000000000000000000000000000081525090506116b7565b6040518060400160405280600181526020017f2d0000000000000000000000000000000000000000000000000000000000000081525090505b600084866040516020016116cc9291906131c7565b6040516020818303038152906040529050600060405180610b000160405280610acf81526020016138b4610acf9139826040518061060001604052806105d781526020016143836105d7913960405160200161172a9392919061320c565b6040516020818303038152906040529050600061177386858761174c86611d61565b60405160200161175f9493929190613405565b604051602081830303815290604052611d61565b90508060405160200161178691906134bb565b6040516020818303038152906040529d5050505050505050505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82600a600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600b600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550505050565b60065481565b7f00000000000000000000000000000000000000000000000000000000000000003410156118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bf90613529565b60405180910390fd5b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461195b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195290613595565b60405180910390fd5b61196733600654611f00565b61197482826006546117fc565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503360096000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006547f8473e948bcf25e455d9d6476037e3b847d78f2411a8481e70d546afce6a7579160405160405180910390a26001600654611aa491906135b5565b60068190555060007f000000000000000000000000000000000000000000000000000000000000000034611ad8919061360b565b90506000811115611b2b573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b29573d6000803e3d6000fd5b505b505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806201518063ffffffff1683611b77919061363f565b9050610e1061ffff1681611b8b9190613670565b915050919050565b600080610e1061ffff1683611ba8919061363f565b9050603c60ff1681611bba9190613670565b915050919050565b6000603c60ff1682611bd4919061363f565b9050919050565b60606000821415611c23576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d37565b600082905060005b60008214611c55578080611c3e906136a1565b915050600a82611c4e9190613670565b9150611c2b565b60008167ffffffffffffffff811115611c7157611c7061267f565b5b6040519080825280601f01601f191660200182016040528015611ca35781602001600182028036833780820191505090505b5090505b60008514611d3057600182611cbc919061360b565b9150600a85611ccb919061363f565b6030611cd791906135b5565b60f81b818381518110611ced57611cec6136ea565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611d299190613670565b9450611ca7565b8093505050505b919050565b600080821215611d5857816000611d539190613719565b611d5a565b815b9050919050565b606060006040518060600160405280604081526020016138746040913990506000835190506000811415611da8576040518060200160405280600081525092505050611efb565b60006003600283611db991906135b5565b611dc39190613670565b6004611dcf91906137ad565b90506000602082611de091906135b5565b67ffffffffffffffff811115611df957611df861267f565b5b6040519080825280601f01601f191660200182016040528015611e2b5781602001600182028036833780820191505090505b5090506000849050600181016020830160005b86811015611eb75760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b90508084526004840193505050611e3e565b506003860660018114611ed15760028114611ee157611eec565b613d3d60f01b6002830352611eec565b603d60f81b60018303525b50848452505081955050505050505b919050565b611f0a8282612037565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611ff4575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401611f9093929190612b08565b6020604051808303816000875af1158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd39190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202a90612be0565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209e90612ab1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214090613853565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6122938161225e565b811461229e57600080fd5b50565b6000813590506122b08161228a565b92915050565b6000602082840312156122cc576122cb612254565b5b60006122da848285016122a1565b91505092915050565b60008115159050919050565b6122f8816122e3565b82525050565b600060208201905061231360008301846122ef565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612353578082015181840152602081019050612338565b83811115612362576000848401525b50505050565b6000601f19601f8301169050919050565b600061238482612319565b61238e8185612324565b935061239e818560208601612335565b6123a781612368565b840191505092915050565b600060208201905081810360008301526123cc8184612379565b905092915050565b6000819050919050565b6123e7816123d4565b81146123f257600080fd5b50565b600081359050612404816123de565b92915050565b6000602082840312156124205761241f612254565b5b600061242e848285016123f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246282612437565b9050919050565b61247281612457565b82525050565b600060208201905061248d6000830184612469565b92915050565b61249c81612457565b81146124a757600080fd5b50565b6000813590506124b981612493565b92915050565b600080604083850312156124d6576124d5612254565b5b60006124e4858286016124aa565b92505060206124f5858286016123f5565b9150509250929050565b612508816123d4565b82525050565b600060208201905061252360008301846124ff565b92915050565b60008060006060848603121561254257612541612254565b5b6000612550868287016124aa565b9350506020612561868287016124aa565b9250506040612572868287016123f5565b9150509250925092565b60008160000b9050919050565b6125928161257c565b82525050565b60006040820190506125ad6000830185612589565b6125ba6020830184612589565b9392505050565b60006020820190506125d66000830184612589565b92915050565b6000602082840312156125f2576125f1612254565b5b6000612600848285016124aa565b91505092915050565b612612816122e3565b811461261d57600080fd5b50565b60008135905061262f81612609565b92915050565b6000806040838503121561264c5761264b612254565b5b600061265a858286016124aa565b925050602061266b85828601612620565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126b782612368565b810181811067ffffffffffffffff821117156126d6576126d561267f565b5b80604052505050565b60006126e961224a565b90506126f582826126ae565b919050565b600067ffffffffffffffff8211156127155761271461267f565b5b61271e82612368565b9050602081019050919050565b82818337600083830152505050565b600061274d612748846126fa565b6126df565b9050828152602081018484840111156127695761276861267a565b5b61277484828561272b565b509392505050565b600082601f83011261279157612790612675565b5b81356127a184826020860161273a565b91505092915050565b600080600080608085870312156127c4576127c3612254565b5b60006127d2878288016124aa565b94505060206127e3878288016124aa565b93505060406127f4878288016123f5565b925050606085013567ffffffffffffffff81111561281557612814612259565b5b6128218782880161277c565b91505092959194509250565b6128368161257c565b811461284157600080fd5b50565b6000813590506128538161282d565b92915050565b60008060006060848603121561287257612871612254565b5b600061288086828701612844565b935050602061289186828701612844565b92505060406128a2868287016123f5565b9150509250925092565b600080604083850312156128c3576128c2612254565b5b60006128d185828601612844565b92505060206128e285828601612844565b9150509250929050565b6000806040838503121561290357612902612254565b5b6000612911858286016124aa565b9250506020612922858286016124aa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061297357607f821691505b602082108114156129875761298661292c565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006129c3600e83612324565b91506129ce8261298d565b602082019050919050565b600060208201905081810360008301526129f2816129b6565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612a2f600a83612324565b9150612a3a826129f9565b602082019050919050565b60006020820190508181036000830152612a5e81612a22565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b6000612a9b601183612324565b9150612aa682612a65565b602082019050919050565b60006020820190508181036000830152612aca81612a8e565b9050919050565b600082825260208201905092915050565b50565b6000612af2600083612ad1565b9150612afd82612ae2565b600082019050919050565b6000608082019050612b1d6000830186612469565b612b2a6020830185612469565b612b3760408301846124ff565b8181036060830152612b4881612ae5565b9050949350505050565b600081519050612b618161228a565b92915050565b600060208284031215612b7d57612b7c612254565b5b6000612b8b84828501612b52565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000612bca601083612324565b9150612bd582612b94565b602082019050919050565b60006020820190508181036000830152612bf981612bbd565b9050919050565b600081519050919050565b6000612c1682612c00565b612c208185612ad1565b9350612c30818560208601612335565b612c3981612368565b840191505092915050565b6000608082019050612c596000830187612469565b612c666020830186612469565b612c7360408301856124ff565b8181036060830152612c858184612c0b565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cf98261257c565b9150612d048361257c565b925082612d1457612d13612c90565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615612d4d57612d4c612cbf565b5b828205905092915050565b6000819050919050565b6000612d6d82612d58565b9150612d7883612d58565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615612db357612db2612cbf565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615612deb57612dea612cbf565b5b828201905092915050565b6000612e0182612d58565b9150612e0c83612d58565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612e4b57612e4a612cbf565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612e8857612e87612cbf565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615612ec557612ec4612cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615612f0257612f01612cbf565b5b828202905092915050565b6000612f1882612d58565b9150612f2383612d58565b925082612f3357612f32612c90565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612f6c57612f6b612cbf565b5b828205905092915050565b600081905092915050565b7f203c672069643d226d696e75746522207472616e73666f726d203d2022726f7460008201527f6174652800000000000000000000000000000000000000000000000000000000602082015250565b6000612fde602483612f77565b9150612fe982612f82565b602482019050919050565b6000612fff82612319565b6130098185612f77565b9350613019818560208601612335565b80840191505092915050565b7f202029223e2020202020203c7061746820636c6173733d226d696e7574652d6160008201527f726d2220643d224d3230302032303056373822202f3e2020202020203c63697260208201527f636c6520636c6173733d2273697a696e672d626f78222063783d22323030222060408201527f63793d223230302220723d2231333022202f3e202020203c2f673e202020203c60608201527f672069643d22686f757222207472616e73666f726d203d2022726f7461746528608082015250565b60006130f360a083612f77565b91506130fe82613025565b60a082019050919050565b7f202029223e2020202020203c7061746820636c6173733d22686f75722d61726d60008201527f2220643d224d323030203230305631343022202f3e2020202020203c6369726360208201527f6c6520636c6173733d2273697a696e672d626f78222063783d2232303022206360408201527f793d223230302220723d2231333022202f3e202020203c2f673e202000000000606082015250565b60006131b1607c83612f77565b91506131bc82613109565b607c82019050919050565b60006131d282612fd1565b91506131de8285612ff4565b91506131e9826130e6565b91506131f58284612ff4565b9150613200826131a4565b91508190509392505050565b60006132188286612ff4565b91506132248285612ff4565b91506132308284612ff4565b9150819050949350505050565b7f7b226e616d65223a20224d6f6d656e744e465420000000000000000000000000600082015250565b6000613273601483612f77565b915061327e8261323d565b601482019050919050565b7f222c20226465736372697074696f6e223a202246756c6c79206f6e2d6368616960008201527f6e20636c6f636b204e465420746861742073686f777320796f7520746865206360208201527f757272656e742074696d652e2054696d65207a6f6e652073657420746f20555460408201527f4300000000000000000000000000000000000000000000000000000000000000606082015250565b6000613331606183612f77565b915061333c82613289565b606182019050919050565b7f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b60008201527f6261736536342c00000000000000000000000000000000000000000000000000602082015250565b60006133a3602783612f77565b91506133ae82613347565b602782019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b60006133ef600283612f77565b91506133fa826133b9565b600282019050919050565b600061341082613266565b915061341c8287612ff4565b915061342782613324565b91506134338286612ff4565b915061343f8285612ff4565b915061344a82613396565b91506134568284612ff4565b9150613461826133e2565b915081905095945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b60006134a5601d83612f77565b91506134b08261346f565b601d82019050919050565b60006134c682613498565b91506134d28284612ff4565b915081905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b6000613513601483612324565b915061351e826134dd565b602082019050919050565b6000602082019050818103600083015261354281613506565b9050919050565b7f416c726561647920436c61696d65640000000000000000000000000000000000600082015250565b600061357f600f83612324565b915061358a82613549565b602082019050919050565b600060208201905081810360008301526135ae81613572565b9050919050565b60006135c0826123d4565b91506135cb836123d4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613600576135ff612cbf565b5b828201905092915050565b6000613616826123d4565b9150613621836123d4565b92508282101561363457613633612cbf565b5b828203905092915050565b600061364a826123d4565b9150613655836123d4565b92508261366557613664612c90565b5b828206905092915050565b600061367b826123d4565b9150613686836123d4565b92508261369657613695612c90565b5b828204905092915050565b60006136ac826123d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136df576136de612cbf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061372482612d58565b915061372f83612d58565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561376a57613769612cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156137a2576137a1612cbf565b5b828203905092915050565b60006137b8826123d4565b91506137c3836123d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137fc576137fb612cbf565b5b828202905092915050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b600061383d600e83612324565b915061384882613807565b602082019050919050565b6000602082019050818103600083015261386c81613830565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f203c7376672077696474683d2234303022206865696768743d22343030222076696577426f783d223020302034303020343030222066696c6c3d226e6f6e652220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e202020203c6465663e2020202020203c7374796c653e2020202020202e6d696e7574652d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20234133413341333b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d2020202020202e686f75722d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20236666663b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d202020202020236d696e7574652c23686f7572207b20202020202020207472616e73666f726d2d6f726967696e3a2032303070782032303070783b2020202020207d202020203c2f7374796c653e202020203c2f6465663e202020203c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d22776869746522202f3e202020203c636972636c652063783d22323030222063793d223230302220723d2231343722207374726f6b653d22626c61636b22207374726f6b652d77696474683d223622202f3e202020203c636972636c652063783d22323030222063793d223230302220723d22313435222066696c6c3d22626c61636b22207374726f6b653d222333393339333922207374726f6b652d77696474683d223222202f3e202020203c6d61736b2069643d226d61736b305f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2236312220793d223631222077696474683d2232373822206865696768743d22323738223e2020202020203c7265637420783d223139382220793d223631222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223139382220793d22333031222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2236312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d39302036312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223330312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3930203330312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223133322e3233322220793d223332312e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203133322e323332203332312e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223235322e3233322220793d223131332e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203235322e323332203131332e35333129222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2238302e363232342220793d223237312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3132302038302e36323234203237312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238382e3436392220793d223135312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313230203238382e343639203135312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2237382e363232342220793d223133322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d36302037382e36323234203133322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238362e3436392220793d223235322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3630203238362e343639203235322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223237312e3233322220793d223331392e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203237312e323332203331392e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223135312e3233322220793d223131312e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203135312e323332203131312e35333129222066696c6c3d222343344334433422202f3e202020203c2f6d61736b3e202020203c67206d61736b3d2275726c28236d61736b305f375f363129223e2020202020203c6d61736b2069643d226d61736b315f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2234352220793d223431222077696474683d2233323422206865696768743d22333136223e20202020202020203c7265637420783d2234352220793d223431222077696474683d2233323422206865696768743d22333136222066696c6c3d2275726c28237061696e74305f6c696e6561725f375f36312922202f3e2020202020203c2f6d61736b3e2020202020203c67206d61736b3d2275726c28236d61736b315f375f363129223e20202020202020203c7265637420783d2231332220793d2239222077696474683d2233383722206865696768743d22333539222066696c6c3d222346353834464622202f3e20202020202020203c672066696c7465723d2275726c282366696c746572305f665f375f363129223e202020202020202020203c636972636c652063783d2238322e35222063793d223131372e352220723d223131372e35222066696c6c3d222346463834434522202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572315f665f375f363129223e202020202020202020203c636972636c652063783d223334392e35222063793d223233392e352220723d223131372e35222066696c6c3d222338344137464622202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572325f665f375f363129223e202020202020202020203c636972636c652063783d223131332e35222063793d223334352e352220723d223131372e35222066696c6c3d222345303931393122202f3e20202020202020203c2f673e2020202020203c2f673e202020203c2f673e203c636972636c652063783d22323030222063793d223230302220723d2235222066696c6c3d22776869746522202f3e202020203c646566733e2020202020203c66696c7465722069643d2266696c746572305f665f375f36312220783d222d3133352220793d222d313030222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572315f665f375f36312220783d223133322220793d223232222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572325f665f375f36312220783d222d3130342220793d22313238222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c6c696e6561724772616469656e742069643d227061696e74305f6c696e6561725f375f3631222078313d22323037222079313d223431222078323d22323037222079323d2233353722206772616469656e74556e6974733d227573657253706163654f6e557365223e20202020202020203c73746f702073746f702d636f6c6f723d222346463834434522202f3e20202020202020203c73746f70206f66667365743d2231222073746f702d636f6c6f723d222339323344464622202f3e2020202020203c2f6c696e6561724772616469656e743e202020203c2f646566733e20203c2f7376673ea2646970667358221220492c4a018a892102fe99f39259e1bd991ac5999d869961567aca5e6b5f6d015664736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c80636352211e116100ec578063c87b56dd1161008a578063ce9ecbd111610064578063ce9ecbd11461064b578063d082e38114610674578063db819ade1461069f578063e985e9c5146106bb5761019c565b8063c87b56dd14610594578063c884ef83146105d1578063cdc1d7921461060e5761019c565b80637c6d56a6116100c65780637c6d56a6146104da57806395d89b4114610517578063a22cb46514610542578063b88d4fde1461056b5761019c565b80636352211e14610423578063679133401461046057806370a082311461049d5761019c565b806323b872dd116101595780633afbf251116101335780633afbf251146103695780633ccfd60b146103a65780633fb2b692146103bd57806342842e0e146103fa5761019c565b806323b872dd146102c557806328134e23146102ee5780633af9e89c1461032c5761019c565b806301ffc9a7146101a157806306fdde03146101de578063081812fc14610209578063095ea7b3146102465780631581b6001461026f57806315d655c91461029a575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c391906122b6565b6106f8565b6040516101d591906122fe565b60405180910390f35b3480156101ea57600080fd5b506101f361078a565b60405161020091906123b2565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b919061240a565b610818565b60405161023d9190612478565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906124bf565b61084b565b005b34801561027b57600080fd5b50610284610a34565b6040516102919190612478565b60405180910390f35b3480156102a657600080fd5b506102af610a58565b6040516102bc919061250e565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190612529565b610a7c565b005b3480156102fa57600080fd5b506103156004803603810190610310919061240a565b610e7c565b604051610323929190612598565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e919061240a565b610eca565b60405161036091906125c1565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b919061240a565b610eea565b60405161039d91906125c1565b60405180910390f35b3480156103b257600080fd5b506103bb610f0a565b005b3480156103c957600080fd5b506103e460048036038101906103df91906125dc565b610f73565b6040516103f1919061250e565b60405180910390f35b34801561040657600080fd5b50610421600480360381019061041c9190612529565b610f8b565b005b34801561042f57600080fd5b5061044a6004803603810190610445919061240a565b6110c3565b6040516104579190612478565b60405180910390f35b34801561046c57600080fd5b506104876004803603810190610482919061240a565b6110f6565b6040516104949190612478565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf91906125dc565b611133565b6040516104d1919061250e565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc91906125dc565b61114b565b60405161050e919061250e565b60405180910390f35b34801561052357600080fd5b5061052c611194565b60405161053991906123b2565b60405180910390f35b34801561054e57600080fd5b5061056960048036038101906105649190612635565b611222565b005b34801561057757600080fd5b50610592600480360381019061058d91906127aa565b61131f565b005b3480156105a057600080fd5b506105bb60048036038101906105b6919061240a565b61145a565b6040516105c891906123b2565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f391906125dc565b6117a9565b60405161060591906122fe565b60405180910390f35b34801561061a57600080fd5b506106356004803603810190610630919061240a565b6117c9565b6040516106429190612478565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190612859565b6117fc565b005b34801561068057600080fd5b5061068961185f565b604051610696919061250e565b60405180910390f35b6106b960048036038101906106b491906128ac565b611865565b005b3480156106c757600080fd5b506106e260048036038101906106dd91906128ec565b611b30565b6040516106ef91906122fe565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107835750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546107979061295b565b80601f01602080910402602001604051908101604052809291908181526020018280546107c39061295b565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109435750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610979906129d9565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490612a45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490612ab1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c4d5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610cb657506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906129d9565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080600a600084815260200190815260200160002060009054906101000a900460000b600b600085815260200190815260200160002060009054906101000a900460000b91509150915091565b600a6020528060005260406000206000915054906101000a900460000b81565b600b6020528060005260406000206000915054906101000a900460000b81565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f70573d6000803e3d6000fd5b50565b60086020528060005260406000206000915090505481565b610f96838383610a7c565b60008273ffffffffffffffffffffffffffffffffffffffff163b148061107f575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161101b93929190612b08565b6020604051808303816000875af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612be0565b60405180910390fd5b505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546111a19061295b565b80601f01602080910402602001604051908101604052809291908181526020018280546111cd9061295b565b801561121a5780601f106111ef5761010080835404028352916020019161121a565b820191906000526020600020905b8154815290600101906020018083116111fd57829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161131391906122fe565b60405180910390a35050565b61132a848484610a7c565b60008373ffffffffffffffffffffffffffffffffffffffff163b1480611415575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016113b19493929190612c44565b6020604051808303816000875af11580156113d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f49190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144b90612be0565b60405180910390fd5b50505050565b60606000603c600b600085815260200190815260200160002060009054906101000a900460000b61148b9190612cee565b60000b600a600085815260200190815260200160002060009054906101000a900460000b60000b6114bb42611b5f565b6114c59190612d62565b6114cf9190612d62565b905060008112156114ea578060186114e79190612d62565b90505b6000600b600085815260200190815260200160002060009054906101000a900460000b60000b61151942611b93565b6115239190612d62565b9050600061153042611bc2565b90506000600c6006846115439190612df6565b61154d9190612f0d565b600c6101688661155d9190612df6565b6115679190612f0d565b6115719190612d62565b90506000603c6006846115849190612df6565b61158e9190612f0d565b603c6101688661159e9190612df6565b6115a89190612f0d565b6115b29190612d62565b905060006115bf83611bdb565b905060006115cc83611bdb565b905060006115d98a611bdb565b9050600061161161160c600a60008e815260200190815260200160002060009054906101000a900460000b60000b611d3c565b611bdb565b905060606000600a60008e815260200190815260200160002060009054906101000a900460000b60000b131561167e576040518060400160405280600181526020017f2b0000000000000000000000000000000000000000000000000000000000000081525090506116b7565b6040518060400160405280600181526020017f2d0000000000000000000000000000000000000000000000000000000000000081525090505b600084866040516020016116cc9291906131c7565b6040516020818303038152906040529050600060405180610b000160405280610acf81526020016138b4610acf9139826040518061060001604052806105d781526020016143836105d7913960405160200161172a9392919061320c565b6040516020818303038152906040529050600061177386858761174c86611d61565b60405160200161175f9493929190613405565b604051602081830303815290604052611d61565b90508060405160200161178691906134bb565b6040516020818303038152906040529d5050505050505050505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82600a600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600b600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550505050565b60065481565b7f00000000000000000000000000000000000000000000000000000000000000003410156118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bf90613529565b60405180910390fd5b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461195b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195290613595565b60405180910390fd5b61196733600654611f00565b61197482826006546117fc565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503360096000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006547f8473e948bcf25e455d9d6476037e3b847d78f2411a8481e70d546afce6a7579160405160405180910390a26001600654611aa491906135b5565b60068190555060007f000000000000000000000000000000000000000000000000000000000000000034611ad8919061360b565b90506000811115611b2b573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b29573d6000803e3d6000fd5b505b505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806201518063ffffffff1683611b77919061363f565b9050610e1061ffff1681611b8b9190613670565b915050919050565b600080610e1061ffff1683611ba8919061363f565b9050603c60ff1681611bba9190613670565b915050919050565b6000603c60ff1682611bd4919061363f565b9050919050565b60606000821415611c23576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611d37565b600082905060005b60008214611c55578080611c3e906136a1565b915050600a82611c4e9190613670565b9150611c2b565b60008167ffffffffffffffff811115611c7157611c7061267f565b5b6040519080825280601f01601f191660200182016040528015611ca35781602001600182028036833780820191505090505b5090505b60008514611d3057600182611cbc919061360b565b9150600a85611ccb919061363f565b6030611cd791906135b5565b60f81b818381518110611ced57611cec6136ea565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611d299190613670565b9450611ca7565b8093505050505b919050565b600080821215611d5857816000611d539190613719565b611d5a565b815b9050919050565b606060006040518060600160405280604081526020016138746040913990506000835190506000811415611da8576040518060200160405280600081525092505050611efb565b60006003600283611db991906135b5565b611dc39190613670565b6004611dcf91906137ad565b90506000602082611de091906135b5565b67ffffffffffffffff811115611df957611df861267f565b5b6040519080825280601f01601f191660200182016040528015611e2b5781602001600182028036833780820191505090505b5090506000849050600181016020830160005b86811015611eb75760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b90508084526004840193505050611e3e565b506003860660018114611ed15760028114611ee157611eec565b613d3d60f01b6002830352611eec565b603d60f81b60018303525b50848452505081955050505050505b919050565b611f0a8282612037565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611ff4575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401611f9093929190612b08565b6020604051808303816000875af1158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd39190612b67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202a90612be0565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209e90612ab1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214090613853565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6122938161225e565b811461229e57600080fd5b50565b6000813590506122b08161228a565b92915050565b6000602082840312156122cc576122cb612254565b5b60006122da848285016122a1565b91505092915050565b60008115159050919050565b6122f8816122e3565b82525050565b600060208201905061231360008301846122ef565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612353578082015181840152602081019050612338565b83811115612362576000848401525b50505050565b6000601f19601f8301169050919050565b600061238482612319565b61238e8185612324565b935061239e818560208601612335565b6123a781612368565b840191505092915050565b600060208201905081810360008301526123cc8184612379565b905092915050565b6000819050919050565b6123e7816123d4565b81146123f257600080fd5b50565b600081359050612404816123de565b92915050565b6000602082840312156124205761241f612254565b5b600061242e848285016123f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246282612437565b9050919050565b61247281612457565b82525050565b600060208201905061248d6000830184612469565b92915050565b61249c81612457565b81146124a757600080fd5b50565b6000813590506124b981612493565b92915050565b600080604083850312156124d6576124d5612254565b5b60006124e4858286016124aa565b92505060206124f5858286016123f5565b9150509250929050565b612508816123d4565b82525050565b600060208201905061252360008301846124ff565b92915050565b60008060006060848603121561254257612541612254565b5b6000612550868287016124aa565b9350506020612561868287016124aa565b9250506040612572868287016123f5565b9150509250925092565b60008160000b9050919050565b6125928161257c565b82525050565b60006040820190506125ad6000830185612589565b6125ba6020830184612589565b9392505050565b60006020820190506125d66000830184612589565b92915050565b6000602082840312156125f2576125f1612254565b5b6000612600848285016124aa565b91505092915050565b612612816122e3565b811461261d57600080fd5b50565b60008135905061262f81612609565b92915050565b6000806040838503121561264c5761264b612254565b5b600061265a858286016124aa565b925050602061266b85828601612620565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126b782612368565b810181811067ffffffffffffffff821117156126d6576126d561267f565b5b80604052505050565b60006126e961224a565b90506126f582826126ae565b919050565b600067ffffffffffffffff8211156127155761271461267f565b5b61271e82612368565b9050602081019050919050565b82818337600083830152505050565b600061274d612748846126fa565b6126df565b9050828152602081018484840111156127695761276861267a565b5b61277484828561272b565b509392505050565b600082601f83011261279157612790612675565b5b81356127a184826020860161273a565b91505092915050565b600080600080608085870312156127c4576127c3612254565b5b60006127d2878288016124aa565b94505060206127e3878288016124aa565b93505060406127f4878288016123f5565b925050606085013567ffffffffffffffff81111561281557612814612259565b5b6128218782880161277c565b91505092959194509250565b6128368161257c565b811461284157600080fd5b50565b6000813590506128538161282d565b92915050565b60008060006060848603121561287257612871612254565b5b600061288086828701612844565b935050602061289186828701612844565b92505060406128a2868287016123f5565b9150509250925092565b600080604083850312156128c3576128c2612254565b5b60006128d185828601612844565b92505060206128e285828601612844565b9150509250929050565b6000806040838503121561290357612902612254565b5b6000612911858286016124aa565b9250506020612922858286016124aa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061297357607f821691505b602082108114156129875761298661292c565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006129c3600e83612324565b91506129ce8261298d565b602082019050919050565b600060208201905081810360008301526129f2816129b6565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612a2f600a83612324565b9150612a3a826129f9565b602082019050919050565b60006020820190508181036000830152612a5e81612a22565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b6000612a9b601183612324565b9150612aa682612a65565b602082019050919050565b60006020820190508181036000830152612aca81612a8e565b9050919050565b600082825260208201905092915050565b50565b6000612af2600083612ad1565b9150612afd82612ae2565b600082019050919050565b6000608082019050612b1d6000830186612469565b612b2a6020830185612469565b612b3760408301846124ff565b8181036060830152612b4881612ae5565b9050949350505050565b600081519050612b618161228a565b92915050565b600060208284031215612b7d57612b7c612254565b5b6000612b8b84828501612b52565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000612bca601083612324565b9150612bd582612b94565b602082019050919050565b60006020820190508181036000830152612bf981612bbd565b9050919050565b600081519050919050565b6000612c1682612c00565b612c208185612ad1565b9350612c30818560208601612335565b612c3981612368565b840191505092915050565b6000608082019050612c596000830187612469565b612c666020830186612469565b612c7360408301856124ff565b8181036060830152612c858184612c0b565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cf98261257c565b9150612d048361257c565b925082612d1457612d13612c90565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615612d4d57612d4c612cbf565b5b828205905092915050565b6000819050919050565b6000612d6d82612d58565b9150612d7883612d58565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615612db357612db2612cbf565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615612deb57612dea612cbf565b5b828201905092915050565b6000612e0182612d58565b9150612e0c83612d58565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612e4b57612e4a612cbf565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612e8857612e87612cbf565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615612ec557612ec4612cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615612f0257612f01612cbf565b5b828202905092915050565b6000612f1882612d58565b9150612f2383612d58565b925082612f3357612f32612c90565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612f6c57612f6b612cbf565b5b828205905092915050565b600081905092915050565b7f203c672069643d226d696e75746522207472616e73666f726d203d2022726f7460008201527f6174652800000000000000000000000000000000000000000000000000000000602082015250565b6000612fde602483612f77565b9150612fe982612f82565b602482019050919050565b6000612fff82612319565b6130098185612f77565b9350613019818560208601612335565b80840191505092915050565b7f202029223e2020202020203c7061746820636c6173733d226d696e7574652d6160008201527f726d2220643d224d3230302032303056373822202f3e2020202020203c63697260208201527f636c6520636c6173733d2273697a696e672d626f78222063783d22323030222060408201527f63793d223230302220723d2231333022202f3e202020203c2f673e202020203c60608201527f672069643d22686f757222207472616e73666f726d203d2022726f7461746528608082015250565b60006130f360a083612f77565b91506130fe82613025565b60a082019050919050565b7f202029223e2020202020203c7061746820636c6173733d22686f75722d61726d60008201527f2220643d224d323030203230305631343022202f3e2020202020203c6369726360208201527f6c6520636c6173733d2273697a696e672d626f78222063783d2232303022206360408201527f793d223230302220723d2231333022202f3e202020203c2f673e202000000000606082015250565b60006131b1607c83612f77565b91506131bc82613109565b607c82019050919050565b60006131d282612fd1565b91506131de8285612ff4565b91506131e9826130e6565b91506131f58284612ff4565b9150613200826131a4565b91508190509392505050565b60006132188286612ff4565b91506132248285612ff4565b91506132308284612ff4565b9150819050949350505050565b7f7b226e616d65223a20224d6f6d656e744e465420000000000000000000000000600082015250565b6000613273601483612f77565b915061327e8261323d565b601482019050919050565b7f222c20226465736372697074696f6e223a202246756c6c79206f6e2d6368616960008201527f6e20636c6f636b204e465420746861742073686f777320796f7520746865206360208201527f757272656e742074696d652e2054696d65207a6f6e652073657420746f20555460408201527f4300000000000000000000000000000000000000000000000000000000000000606082015250565b6000613331606183612f77565b915061333c82613289565b606182019050919050565b7f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b60008201527f6261736536342c00000000000000000000000000000000000000000000000000602082015250565b60006133a3602783612f77565b91506133ae82613347565b602782019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b60006133ef600283612f77565b91506133fa826133b9565b600282019050919050565b600061341082613266565b915061341c8287612ff4565b915061342782613324565b91506134338286612ff4565b915061343f8285612ff4565b915061344a82613396565b91506134568284612ff4565b9150613461826133e2565b915081905095945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b60006134a5601d83612f77565b91506134b08261346f565b601d82019050919050565b60006134c682613498565b91506134d28284612ff4565b915081905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b6000613513601483612324565b915061351e826134dd565b602082019050919050565b6000602082019050818103600083015261354281613506565b9050919050565b7f416c726561647920436c61696d65640000000000000000000000000000000000600082015250565b600061357f600f83612324565b915061358a82613549565b602082019050919050565b600060208201905081810360008301526135ae81613572565b9050919050565b60006135c0826123d4565b91506135cb836123d4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613600576135ff612cbf565b5b828201905092915050565b6000613616826123d4565b9150613621836123d4565b92508282101561363457613633612cbf565b5b828203905092915050565b600061364a826123d4565b9150613655836123d4565b92508261366557613664612c90565b5b828206905092915050565b600061367b826123d4565b9150613686836123d4565b92508261369657613695612c90565b5b828204905092915050565b60006136ac826123d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136df576136de612cbf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061372482612d58565b915061372f83612d58565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561376a57613769612cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156137a2576137a1612cbf565b5b828203905092915050565b60006137b8826123d4565b91506137c3836123d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137fc576137fb612cbf565b5b828202905092915050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b600061383d600e83612324565b915061384882613807565b602082019050919050565b6000602082019050818103600083015261386c81613830565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f203c7376672077696474683d2234303022206865696768743d22343030222076696577426f783d223020302034303020343030222066696c6c3d226e6f6e652220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e202020203c6465663e2020202020203c7374796c653e2020202020202e6d696e7574652d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20234133413341333b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d2020202020202e686f75722d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20236666663b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d202020202020236d696e7574652c23686f7572207b20202020202020207472616e73666f726d2d6f726967696e3a2032303070782032303070783b2020202020207d202020203c2f7374796c653e202020203c2f6465663e202020203c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d22776869746522202f3e202020203c636972636c652063783d22323030222063793d223230302220723d2231343722207374726f6b653d22626c61636b22207374726f6b652d77696474683d223622202f3e202020203c636972636c652063783d22323030222063793d223230302220723d22313435222066696c6c3d22626c61636b22207374726f6b653d222333393339333922207374726f6b652d77696474683d223222202f3e202020203c6d61736b2069643d226d61736b305f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2236312220793d223631222077696474683d2232373822206865696768743d22323738223e2020202020203c7265637420783d223139382220793d223631222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223139382220793d22333031222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2236312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d39302036312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223330312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3930203330312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223133322e3233322220793d223332312e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203133322e323332203332312e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223235322e3233322220793d223131332e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203235322e323332203131332e35333129222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2238302e363232342220793d223237312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3132302038302e36323234203237312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238382e3436392220793d223135312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313230203238382e343639203135312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2237382e363232342220793d223133322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d36302037382e36323234203133322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238362e3436392220793d223235322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3630203238362e343639203235322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223237312e3233322220793d223331392e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203237312e323332203331392e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223135312e3233322220793d223131312e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203135312e323332203131312e35333129222066696c6c3d222343344334433422202f3e202020203c2f6d61736b3e202020203c67206d61736b3d2275726c28236d61736b305f375f363129223e2020202020203c6d61736b2069643d226d61736b315f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2234352220793d223431222077696474683d2233323422206865696768743d22333136223e20202020202020203c7265637420783d2234352220793d223431222077696474683d2233323422206865696768743d22333136222066696c6c3d2275726c28237061696e74305f6c696e6561725f375f36312922202f3e2020202020203c2f6d61736b3e2020202020203c67206d61736b3d2275726c28236d61736b315f375f363129223e20202020202020203c7265637420783d2231332220793d2239222077696474683d2233383722206865696768743d22333539222066696c6c3d222346353834464622202f3e20202020202020203c672066696c7465723d2275726c282366696c746572305f665f375f363129223e202020202020202020203c636972636c652063783d2238322e35222063793d223131372e352220723d223131372e35222066696c6c3d222346463834434522202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572315f665f375f363129223e202020202020202020203c636972636c652063783d223334392e35222063793d223233392e352220723d223131372e35222066696c6c3d222338344137464622202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572325f665f375f363129223e202020202020202020203c636972636c652063783d223131332e35222063793d223334352e352220723d223131372e35222066696c6c3d222345303931393122202f3e20202020202020203c2f673e2020202020203c2f673e202020203c2f673e203c636972636c652063783d22323030222063793d223230302220723d2235222066696c6c3d22776869746522202f3e202020203c646566733e2020202020203c66696c7465722069643d2266696c746572305f665f375f36312220783d222d3133352220793d222d313030222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572315f665f375f36312220783d223133322220793d223232222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572325f665f375f36312220783d222d3130342220793d22313238222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c6c696e6561724772616469656e742069643d227061696e74305f6c696e6561725f375f3631222078313d22323037222079313d223431222078323d22323037222079323d2233353722206772616469656e74556e6974733d227573657253706163654f6e557365223e20202020202020203c73746f702073746f702d636f6c6f723d222346463834434522202f3e20202020202020203c73746f70206f66667365743d2231222073746f702d636f6c6f723d222339323344464622202f3e2020202020203c2f6c696e6561724772616469656e743e202020203c2f646566733e20203c2f7376673ea2646970667358221220492c4a018a892102fe99f39259e1bd991ac5999d869961567aca5e6b5f6d015664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 231,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 233,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 244,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 248,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 252,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 258,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 730,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "tokenCounter",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 755,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "claimed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 759,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "userNFTTokenId",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 763,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "ownerOfNFTId",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 767,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "timeZoneHour",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_int8)"
      },
      {
        "astId": 771,
        "contract": "contracts/momentNFT.sol:momentNFT",
        "label": "timeZoneMin",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_int8)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_int8": {
        "encoding": "inplace",
        "label": "int8",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_int8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => int8)",
        "numberOfBytes": "32",
        "value": "t_int8"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}