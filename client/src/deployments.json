{
  "name": "rinkeby",
  "chainId": "4",
  "contracts": {
    "momentNFT":
    {
      "address": "0x0963f1E901614E617F5F600339C9bD6e060844D3",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "CreatedMomentNFT",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "claimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "int8",
              "name": "_timeZoneHour",
              "type": "int8"
            },
            {
              "internalType": "int8",
              "name": "_timeZoneMin",
              "type": "int8"
            }
          ],
          "name": "create",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "getOwnerOfNFTId",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "getTimeZone",
          "outputs": [
            {
              "internalType": "int8",
              "name": "UCThourOffset",
              "type": "int8"
            },
            {
              "internalType": "int8",
              "name": "UCTMinOffset",
              "type": "int8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            }
          ],
          "name": "getUserNFTTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "ownerOfNFTId",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "int8",
              "name": "_timeZoneHour",
              "type": "int8"
            },
            {
              "internalType": "int8",
              "name": "_timeZoneMin",
              "type": "int8"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "setTimeZone",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "timeZoneHour",
          "outputs": [
            {
              "internalType": "int8",
              "name": "",
              "type": "int8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "timeZoneMin",
          "outputs": [
            {
              "internalType": "int8",
              "name": "",
              "type": "int8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "tokenCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "userNFTTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x661c433041566a350bf5f7de7bc905730655224ae01376a3661225f56ba72b41",
      "receipt": {
        "to": null,
        "from": "0xCDa5971084562774cEbEac709139EC45ca3160dc",
        "contractAddress": "0x0963f1E901614E617F5F600339C9bD6e060844D3",
        "transactionIndex": 26,
        "gasUsed": "4025136",
        "logsBloom": "0x
        "blockHash": "0x05ab432812278852308166532b0def7529527388992cc9a6c6a1d4b7b2ab146a",
        "transactionHash": "0x661c433041566a350bf5f7de7bc905730655224ae01376a3661225f56ba72b41",
        "logs": [],
        "blockNumber": 10485036,
        "cumulativeGasUsed": "11983968",
        "status": 1,
        "byzantium": true
      },
      "args": [],
      "numDeployments": 7,
      "solcInputHash": "0dcd1b3bac1b9c4e22e3e233bd3fbb43",
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CreatedMomentNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"_timeZoneHour\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"_timeZoneMin\",\"type\":\"int8\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOwnerOfNFTId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getTimeZone\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"UCThourOffset\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"UCTMinOffset\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserNFTTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOfNFTId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"_timeZoneHour\",\"type\":\"int8\"},{\"internalType\":\"int8\",\"name\":\"_timeZoneMin\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setTimeZone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timeZoneHour\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timeZoneMin\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNFTTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/momentNFT.sol\":\"momentNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(owner != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x06e377f5355b04b8b35b89c5073c3765b034b133b1b6136c44f7e8035aa58935\",\"license\":\"AGPL-3.0-only\"},\"contracts/momentNFT.sol\":{\"content\":\"\\npragma solidity ^0.8.0;\\n\\nimport \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract momentNFT is ERC721 {\\n\\n  uint256 public immutable claimPrice = 0.0001 ether; \\n  address public immutable withdrawAddress = 0x245E32DbA4E30b483F618A3940309236AaEbBbC5 ;\\n  uint public tokenCounter; \\n  uint32 constant SECONDS_PER_DAY = 24 * 60 * 60;\\n  uint16 constant SECONDS_PER_HOUR = 60 * 60;\\n  uint8 constant SECONDS_PER_MINUTE = 60;\\n  string constant svgTop =' <svg width=\\\"400\\\" height=\\\"400\\\" viewBox=\\\"0 0 400 400\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">    <def>      <style>      .minute-arm {        fill: none;        stroke: #A3A3A3;        stroke-width: 6;        stroke-miterlimit: 8;      }      .hour-arm {        fill: none;        stroke: #fff;        stroke-width: 6;        stroke-miterlimit: 8;      }      #minute,#hour {        transform-origin: 200px 200px;      }    </style>    </def>    <rect width=\\\"400\\\" height=\\\"400\\\" fill=\\\"white\\\" />    <circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"147\\\" stroke=\\\"black\\\" stroke-width=\\\"6\\\" />    <circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"145\\\" fill=\\\"black\\\" stroke=\\\"#393939\\\" stroke-width=\\\"2\\\" />    <mask id=\\\"mask0_7_61\\\" style=\\\"mask-type:alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"61\\\" y=\\\"61\\\" width=\\\"278\\\" height=\\\"278\\\">      <rect x=\\\"198\\\" y=\\\"61\\\" width=\\\"4\\\" height=\\\"38\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"198\\\" y=\\\"301\\\" width=\\\"4\\\" height=\\\"38\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"61\\\" y=\\\"202\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-90 61 202)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"301\\\" y=\\\"202\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-90 301 202)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"132.232\\\" y=\\\"321.378\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-150 132.232 321.378)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"252.232\\\" y=\\\"113.531\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-150 252.232 113.531)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"80.6224\\\" y=\\\"271.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-120 80.6224 271.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"288.469\\\" y=\\\"151.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-120 288.469 151.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"78.6224\\\" y=\\\"132.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-60 78.6224 132.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"286.469\\\" y=\\\"252.232\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(-60 286.469 252.232)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"271.232\\\" y=\\\"319.378\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(150 271.232 319.378)\\\" fill=\\\"#C4C4C4\\\" />      <rect x=\\\"151.232\\\" y=\\\"111.531\\\" width=\\\"4\\\" height=\\\"38\\\" transform=\\\"rotate(150 151.232 111.531)\\\" fill=\\\"#C4C4C4\\\" />    </mask>    <g mask=\\\"url(#mask0_7_61)\\\">      <mask id=\\\"mask1_7_61\\\" style=\\\"mask-type:alpha\\\" maskUnits=\\\"userSpaceOnUse\\\" x=\\\"45\\\" y=\\\"41\\\" width=\\\"324\\\" height=\\\"316\\\">        <rect x=\\\"45\\\" y=\\\"41\\\" width=\\\"324\\\" height=\\\"316\\\" fill=\\\"url(#paint0_linear_7_61)\\\" />      </mask>      <g mask=\\\"url(#mask1_7_61)\\\">        <rect x=\\\"13\\\" y=\\\"9\\\" width=\\\"387\\\" height=\\\"359\\\" fill=\\\"#F584FF\\\" />        <g filter=\\\"url(#filter0_f_7_61)\\\">          <circle cx=\\\"82.5\\\" cy=\\\"117.5\\\" r=\\\"117.5\\\" fill=\\\"#FF84CE\\\" />        </g>        <g filter=\\\"url(#filter1_f_7_61)\\\">          <circle cx=\\\"349.5\\\" cy=\\\"239.5\\\" r=\\\"117.5\\\" fill=\\\"#84A7FF\\\" />        </g>        <g filter=\\\"url(#filter2_f_7_61)\\\">          <circle cx=\\\"113.5\\\" cy=\\\"345.5\\\" r=\\\"117.5\\\" fill=\\\"#E09191\\\" />        </g>      </g>    </g> ';\\n  string constant svgBot ='<circle cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"5\\\" fill=\\\"white\\\" />    <defs>      <filter id=\\\"filter0_f_7_61\\\" x=\\\"-135\\\" y=\\\"-100\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <filter id=\\\"filter1_f_7_61\\\" x=\\\"132\\\" y=\\\"22\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <filter id=\\\"filter2_f_7_61\\\" x=\\\"-104\\\" y=\\\"128\\\" width=\\\"435\\\" height=\\\"435\\\" filterUnits=\\\"userSpaceOnUse\\\"        color-interpolation-filters=\\\"sRGB\\\">        <feFlood flood-opacity=\\\"0\\\" result=\\\"BackgroundImageFix\\\" />        <feBlend mode=\\\"normal\\\" in=\\\"SourceGraphic\\\" in2=\\\"BackgroundImageFix\\\" result=\\\"shape\\\" />        <feGaussianBlur stdDeviation=\\\"50\\\" result=\\\"effect1_foregroundBlur_7_61\\\" />      </filter>      <linearGradient id=\\\"paint0_linear_7_61\\\" x1=\\\"207\\\" y1=\\\"41\\\" x2=\\\"207\\\" y2=\\\"357\\\" gradientUnits=\\\"userSpaceOnUse\\\">        <stop stop-color=\\\"#FF84CE\\\" />        <stop offset=\\\"1\\\" stop-color=\\\"#923DFF\\\" />      </linearGradient>    </defs>  </svg>'; \\n  \\n  mapping(address => bool) public claimed;\\n  mapping(address => uint256) public userNFTTokenId;\\n  mapping(uint256 => address) public ownerOfNFTId;\\n  mapping (uint256 => int8) public timeZoneHour; \\n  mapping (uint256 => int8) public timeZoneMin; \\n\\n  event CreatedMomentNFT(uint256 indexed tokenId);\\n\\n  constructor() ERC721 (\\\"Moment NFT\\\", \\\"momentNFT\\\") {\\n    tokenCounter = 0 ;\\n   }\\n\\n  function create(int8 _timeZoneHour, int8 _timeZoneMin) public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    require(claimed[msg.sender] == false, \\\"Already Claimed\\\");\\n    _safeMint(msg.sender, tokenCounter);\\n    setTimeZone(_timeZoneHour,_timeZoneMin,tokenCounter) ; \\n    claimed[msg.sender] = true;\\n    userNFTTokenId[msg.sender] = tokenCounter ; \\n    ownerOfNFTId[tokenCounter] = msg.sender ; \\n    emit CreatedMomentNFT(tokenCounter);\\n    tokenCounter = tokenCounter + 1 ; \\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(msg.sender).transfer(refund);\\n    }\\n  }\\n\\n  function withdraw() public {\\n    payable(withdrawAddress).transfer(address(this).balance);\\n  }\\n\\n  function getUserNFTTokenId(address _userAddress) public view returns (uint256 tokenId){\\n    return userNFTTokenId[_userAddress];\\n  }\\n\\n  function getOwnerOfNFTId(uint256 _id) public view returns (address owner){\\n    return ownerOfNFTId[_id];\\n  }\\n\\n  function setTimeZone(int8 _timeZoneHour,int8 _timeZoneMin, uint _id) public{\\n    timeZoneHour[_id] = _timeZoneHour ;\\n    timeZoneMin[_id] = _timeZoneMin ;  \\n  }\\n\\n  function getTimeZone(uint256 _id) public view returns (int8 UCThourOffset, int8 UCTMinOffset){\\n    return (timeZoneHour[_id] ,  timeZoneMin[_id]) ;\\n  }\\n\\n  function tokenURI(uint256 _id) public view override returns (string memory) {\\n    int hr = int(getHour(block.timestamp)) + timeZoneHour[_id] + (timeZoneMin[_id] /60) ; \\n    if (hr<0) {\\n      hr = 24+hr;\\n    }\\n    int min = int(getMinute(block.timestamp)) + timeZoneMin[_id];\\n    int sec = int(getSecond(block.timestamp)) ;\\n    int hrPosition = (hr * 360) / 12 + (min * (360 / 60)) / 12 ;\\n    int minPosition = (min * 360) / 60 + (sec * (360 / 60)) / 60;\\n    string memory sHrPosition = Strings.toString(uint(hrPosition)) ; \\n    string memory sMinPosition = Strings.toString(uint(minPosition)) ; \\n    string memory svgMid = string(abi.encodePacked(' <g id=\\\"minute\\\" transform = \\\"rotate(',sMinPosition,'  )\\\">      <path class=\\\"minute-arm\\\" d=\\\"M200 200V78\\\" />      <circle class=\\\"sizing-box\\\" cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"130\\\" />    </g>    <g id=\\\"hour\\\" transform = \\\"rotate(',sHrPosition,'  )\\\">      <path class=\\\"hour-arm\\\" d=\\\"M200 200V140\\\" />      <circle class=\\\"sizing-box\\\" cx=\\\"200\\\" cy=\\\"200\\\" r=\\\"130\\\" />    </g>  '));\\n    string memory svg = string(abi.encodePacked(svgTop, svgMid, svgBot )) ; \\n    string memory json = base64(bytes(abi.encodePacked('{\\\"name\\\": \\\"Moment NFT\\\", \\\"description\\\": \\\"Fully on-chain clock NFT that shows you the current time.\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,',base64(bytes(svg)) ,'\\\"}')));\\n    return string(abi.encodePacked('data:application/json;base64,', json));\\n  }\\n\\n  function getHour(uint timestamp) internal pure returns (uint hour) {\\n        uint secs = timestamp % SECONDS_PER_DAY;\\n        hour = secs / SECONDS_PER_HOUR;\\n    }\\n\\n  function getMinute(uint timestamp) internal pure returns (uint minute) {\\n        uint secs = timestamp % SECONDS_PER_HOUR;\\n        minute = secs / SECONDS_PER_MINUTE;\\n    }\\n\\n  function getSecond(uint timestamp) internal pure returns (uint second) {\\n        second = timestamp % SECONDS_PER_MINUTE;\\n    }\\n\\n  function base64(bytes memory data) internal pure returns (string memory) {\\n    bytes memory TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    uint256 len = data.length;\\n    if (len == 0) return \\\"\\\";\\n\\n    uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n    bytes memory result = new bytes(encodedLen + 32);\\n\\n    bytes memory table = TABLE;\\n\\n    assembly {\\n      let tablePtr := add(table, 1)\\n      let resultPtr := add(result, 32)\\n\\n      for {\\n        let i := 0\\n      } lt(i, len) {\\n\\n      } {\\n        i := add(i, 3)\\n        let input := and(mload(add(data, i)), 0xffffff)\\n\\n        let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n        out := shl(224, out)\\n\\n        mstore(resultPtr, out)\\n\\n        resultPtr := add(resultPtr, 4)\\n      }\\n\\n      switch mod(len, 3)\\n      case 1 {\\n          mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n          mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n\\n      mstore(result, encodedLen)\\n    }\\n\\n    return string(result);\\n  }\\n}\",\"keccak256\":\"0x20753634d997bdd894a2216d0ffec5cf96130a6d6ce46f5bcc027414124ce56e\"}},\"version\":1}",
      "bytecode": "0x60c0604052655af3107a400060809081525073245e32dba4e30b483f618a3940309236aaebbbc573ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff168152503480156200006557600080fd5b506040518060400160405280600a81526020017f4d6f6d656e74204e4654000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f6d6f6d656e744e465400000000000000000000000000000000000000000000008152508160009080519060200190620000ea92919062000114565b5080600190805190602001906200010392919062000114565b505050600060068190555062000229565b8280546200012290620001f3565b90600052602060002090601f01602090048101928262000146576000855562000192565b82601f106200016157805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019157825182559160200191906001019062000174565b5b509050620001a19190620001a5565b5090565b5b80821115620001c0576000816000905550600101620001a6565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200020c57607f821691505b60208210811415620002235762000222620001c4565b5b50919050565b60805160a05161470f6200026460003960008181610a360152610f0c015260008181610a5a0152818161177501526119bc015261470f6000f3fe60806040526004361061019c5760003560e01c80636352211e116100ec578063c87b56dd1161008a578063ce9ecbd111610064578063ce9ecbd11461064b578063d082e38114610674578063db819ade1461069f578063e985e9c5146106bb5761019c565b8063c87b56dd14610594578063c884ef83146105d1578063cdc1d7921461060e5761019c565b80637c6d56a6116100c65780637c6d56a6146104da57806395d89b4114610517578063a22cb46514610542578063b88d4fde1461056b5761019c565b80636352211e14610423578063679133401461046057806370a082311461049d5761019c565b806323b872dd116101595780633afbf251116101335780633afbf251146103695780633ccfd60b146103a65780633fb2b692146103bd57806342842e0e146103fa5761019c565b806323b872dd146102c557806328134e23146102ee5780633af9e89c1461032c5761019c565b806301ffc9a7146101a157806306fdde03146101de578063081812fc14610209578063095ea7b3146102465780631581b6001461026f57806315d655c91461029a575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c3919061219f565b6106f8565b6040516101d591906121e7565b60405180910390f35b3480156101ea57600080fd5b506101f361078a565b604051610200919061229b565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b91906122f3565b610818565b60405161023d9190612361565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906123a8565b61084b565b005b34801561027b57600080fd5b50610284610a34565b6040516102919190612361565b60405180910390f35b3480156102a657600080fd5b506102af610a58565b6040516102bc91906123f7565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190612412565b610a7c565b005b3480156102fa57600080fd5b50610315600480360381019061031091906122f3565b610e7c565b604051610323929190612481565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e91906122f3565b610eca565b60405161036091906124aa565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b91906122f3565b610eea565b60405161039d91906124aa565b60405180910390f35b3480156103b257600080fd5b506103bb610f0a565b005b3480156103c957600080fd5b506103e460048036038101906103df91906124c5565b610f73565b6040516103f191906123f7565b60405180910390f35b34801561040657600080fd5b50610421600480360381019061041c9190612412565b610f8b565b005b34801561042f57600080fd5b5061044a600480360381019061044591906122f3565b6110c3565b6040516104579190612361565b60405180910390f35b34801561046c57600080fd5b50610487600480360381019061048291906122f3565b6110f6565b6040516104949190612361565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf91906124c5565b611133565b6040516104d191906123f7565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc91906124c5565b61114b565b60405161050e91906123f7565b60405180910390f35b34801561052357600080fd5b5061052c611194565b604051610539919061229b565b60405180910390f35b34801561054e57600080fd5b506105696004803603810190610564919061251e565b611222565b005b34801561057757600080fd5b50610592600480360381019061058d9190612693565b61131f565b005b3480156105a057600080fd5b506105bb60048036038101906105b691906122f3565b61145a565b6040516105c8919061229b565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f391906124c5565b6116b7565b60405161060591906121e7565b60405180910390f35b34801561061a57600080fd5b50610635600480360381019061063091906122f3565b6116d7565b6040516106429190612361565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190612742565b61170a565b005b34801561068057600080fd5b5061068961176d565b60405161069691906123f7565b60405180910390f35b6106b960048036038101906106b49190612795565b611773565b005b3480156106c757600080fd5b506106e260048036038101906106dd91906127d5565b611a3e565b6040516106ef91906121e7565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107835750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461079790612844565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390612844565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109435750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610979906128c2565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b149061292e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b849061299a565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c4d5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610cb657506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906128c2565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080600a600084815260200190815260200160002060009054906101000a900460000b600b600085815260200190815260200160002060009054906101000a900460000b91509150915091565b600a6020528060005260406000206000915054906101000a900460000b81565b600b6020528060005260406000206000915054906101000a900460000b81565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f70573d6000803e3d6000fd5b50565b60086020528060005260406000206000915090505481565b610f96838383610a7c565b60008273ffffffffffffffffffffffffffffffffffffffff163b148061107f575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161101b939291906129f1565b6020604051808303816000875af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612ac9565b60405180910390fd5b505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546111a190612844565b80601f01602080910402602001604051908101604052809291908181526020018280546111cd90612844565b801561121a5780601f106111ef5761010080835404028352916020019161121a565b820191906000526020600020905b8154815290600101906020018083116111fd57829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161131391906121e7565b60405180910390a35050565b61132a848484610a7c565b60008373ffffffffffffffffffffffffffffffffffffffff163b1480611415575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016113b19493929190612b2d565b6020604051808303816000875af11580156113d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f49190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144b90612ac9565b60405180910390fd5b50505050565b60606000603c600b600085815260200190815260200160002060009054906101000a900460000b61148b9190612bd7565b60000b600a600085815260200190815260200160002060009054906101000a900460000b60000b6114bb42611a6d565b6114c59190612c4b565b6114cf9190612c4b565b905060008112156114ea578060186114e79190612c4b565b90505b6000600b600085815260200190815260200160002060009054906101000a900460000b60000b61151942611aa1565b6115239190612c4b565b9050600061153042611ad0565b90506000600c6006846115439190612cdf565b61154d9190612df6565b600c6101688661155d9190612cdf565b6115679190612df6565b6115719190612c4b565b90506000603c6006846115849190612cdf565b61158e9190612df6565b603c6101688661159e9190612cdf565b6115a89190612df6565b6115b29190612c4b565b905060006115bf83611ae9565b905060006115cc83611ae9565b9050600081836040516020016115e39291906130b0565b6040516020818303038152906040529050600060405180610b000160405280610acf8152602001613634610acf9139826040518061060001604052806105d781526020016141036105d79139604051602001611641939291906130f5565b6040516020818303038152906040529050600061168461166083611c4a565b6040516020016116709190613256565b604051602081830303815290604052611c4a565b90508060405160200161169791906132cf565b6040516020818303038152906040529a5050505050505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82600a600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600b600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550505050565b60065481565b7f00000000000000000000000000000000000000000000000000000000000000003410156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd9061333d565b60405180910390fd5b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611869576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611860906133a9565b60405180910390fd5b61187533600654611de9565b611882828260065461170a565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503360096000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006547f8473e948bcf25e455d9d6476037e3b847d78f2411a8481e70d546afce6a7579160405160405180910390a260016006546119b291906133c9565b60068190555060007f0000000000000000000000000000000000000000000000000000000000000000346119e6919061341f565b90506000811115611a39573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a37573d6000803e3d6000fd5b505b505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806201518063ffffffff1683611a859190613453565b9050610e1061ffff1681611a999190613484565b915050919050565b600080610e1061ffff1683611ab69190613453565b9050603c60ff1681611ac89190613484565b915050919050565b6000603c60ff1682611ae29190613453565b9050919050565b60606000821415611b31576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611c45565b600082905060005b60008214611b63578080611b4c906134b5565b915050600a82611b5c9190613484565b9150611b39565b60008167ffffffffffffffff811115611b7f57611b7e612568565b5b6040519080825280601f01601f191660200182016040528015611bb15781602001600182028036833780820191505090505b5090505b60008514611c3e57600182611bca919061341f565b9150600a85611bd99190613453565b6030611be591906133c9565b60f81b818381518110611bfb57611bfa6134fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611c379190613484565b9450611bb5565b8093505050505b919050565b606060006040518060600160405280604081526020016135f46040913990506000835190506000811415611c91576040518060200160405280600081525092505050611de4565b60006003600283611ca291906133c9565b611cac9190613484565b6004611cb8919061352d565b90506000602082611cc991906133c9565b67ffffffffffffffff811115611ce257611ce1612568565b5b6040519080825280601f01601f191660200182016040528015611d145781602001600182028036833780820191505090505b5090506000849050600181016020830160005b86811015611da05760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b90508084526004840193505050611d27565b506003860660018114611dba5760028114611dca57611dd5565b613d3d60f01b6002830352611dd5565b603d60f81b60018303525b50848452505081955050505050505b919050565b611df38282611f20565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611edd575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401611e79939291906129f1565b6020604051808303816000875af1158015611e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebc9190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1390612ac9565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f879061299a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612032576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612029906135d3565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61217c81612147565b811461218757600080fd5b50565b60008135905061219981612173565b92915050565b6000602082840312156121b5576121b461213d565b5b60006121c38482850161218a565b91505092915050565b60008115159050919050565b6121e1816121cc565b82525050565b60006020820190506121fc60008301846121d8565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561223c578082015181840152602081019050612221565b8381111561224b576000848401525b50505050565b6000601f19601f8301169050919050565b600061226d82612202565b612277818561220d565b935061228781856020860161221e565b61229081612251565b840191505092915050565b600060208201905081810360008301526122b58184612262565b905092915050565b6000819050919050565b6122d0816122bd565b81146122db57600080fd5b50565b6000813590506122ed816122c7565b92915050565b6000602082840312156123095761230861213d565b5b6000612317848285016122de565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061234b82612320565b9050919050565b61235b81612340565b82525050565b60006020820190506123766000830184612352565b92915050565b61238581612340565b811461239057600080fd5b50565b6000813590506123a28161237c565b92915050565b600080604083850312156123bf576123be61213d565b5b60006123cd85828601612393565b92505060206123de858286016122de565b9150509250929050565b6123f1816122bd565b82525050565b600060208201905061240c60008301846123e8565b92915050565b60008060006060848603121561242b5761242a61213d565b5b600061243986828701612393565b935050602061244a86828701612393565b925050604061245b868287016122de565b9150509250925092565b60008160000b9050919050565b61247b81612465565b82525050565b60006040820190506124966000830185612472565b6124a36020830184612472565b9392505050565b60006020820190506124bf6000830184612472565b92915050565b6000602082840312156124db576124da61213d565b5b60006124e984828501612393565b91505092915050565b6124fb816121cc565b811461250657600080fd5b50565b600081359050612518816124f2565b92915050565b600080604083850312156125355761253461213d565b5b600061254385828601612393565b925050602061255485828601612509565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125a082612251565b810181811067ffffffffffffffff821117156125bf576125be612568565b5b80604052505050565b60006125d2612133565b90506125de8282612597565b919050565b600067ffffffffffffffff8211156125fe576125fd612568565b5b61260782612251565b9050602081019050919050565b82818337600083830152505050565b6000612636612631846125e3565b6125c8565b90508281526020810184848401111561265257612651612563565b5b61265d848285612614565b509392505050565b600082601f83011261267a5761267961255e565b5b813561268a848260208601612623565b91505092915050565b600080600080608085870312156126ad576126ac61213d565b5b60006126bb87828801612393565b94505060206126cc87828801612393565b93505060406126dd878288016122de565b925050606085013567ffffffffffffffff8111156126fe576126fd612142565b5b61270a87828801612665565b91505092959194509250565b61271f81612465565b811461272a57600080fd5b50565b60008135905061273c81612716565b92915050565b60008060006060848603121561275b5761275a61213d565b5b60006127698682870161272d565b935050602061277a8682870161272d565b925050604061278b868287016122de565b9150509250925092565b600080604083850312156127ac576127ab61213d565b5b60006127ba8582860161272d565b92505060206127cb8582860161272d565b9150509250929050565b600080604083850312156127ec576127eb61213d565b5b60006127fa85828601612393565b925050602061280b85828601612393565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061285c57607f821691505b602082108114156128705761286f612815565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006128ac600e8361220d565b91506128b782612876565b602082019050919050565b600060208201905081810360008301526128db8161289f565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612918600a8361220d565b9150612923826128e2565b602082019050919050565b600060208201905081810360008301526129478161290b565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b600061298460118361220d565b915061298f8261294e565b602082019050919050565b600060208201905081810360008301526129b381612977565b9050919050565b600082825260208201905092915050565b50565b60006129db6000836129ba565b91506129e6826129cb565b600082019050919050565b6000608082019050612a066000830186612352565b612a136020830185612352565b612a2060408301846123e8565b8181036060830152612a31816129ce565b9050949350505050565b600081519050612a4a81612173565b92915050565b600060208284031215612a6657612a6561213d565b5b6000612a7484828501612a3b565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000612ab360108361220d565b9150612abe82612a7d565b602082019050919050565b60006020820190508181036000830152612ae281612aa6565b9050919050565b600081519050919050565b6000612aff82612ae9565b612b0981856129ba565b9350612b1981856020860161221e565b612b2281612251565b840191505092915050565b6000608082019050612b426000830187612352565b612b4f6020830186612352565b612b5c60408301856123e8565b8181036060830152612b6e8184612af4565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612be282612465565b9150612bed83612465565b925082612bfd57612bfc612b79565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615612c3657612c35612ba8565b5b828205905092915050565b6000819050919050565b6000612c5682612c41565b9150612c6183612c41565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615612c9c57612c9b612ba8565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615612cd457612cd3612ba8565b5b828201905092915050565b6000612cea82612c41565b9150612cf583612c41565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612d3457612d33612ba8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612d7157612d70612ba8565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615612dae57612dad612ba8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615612deb57612dea612ba8565b5b828202905092915050565b6000612e0182612c41565b9150612e0c83612c41565b925082612e1c57612e1b612b79565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612e5557612e54612ba8565b5b828205905092915050565b600081905092915050565b7f203c672069643d226d696e75746522207472616e73666f726d203d2022726f7460008201527f6174652800000000000000000000000000000000000000000000000000000000602082015250565b6000612ec7602483612e60565b9150612ed282612e6b565b602482019050919050565b6000612ee882612202565b612ef28185612e60565b9350612f0281856020860161221e565b80840191505092915050565b7f202029223e2020202020203c7061746820636c6173733d226d696e7574652d6160008201527f726d2220643d224d3230302032303056373822202f3e2020202020203c63697260208201527f636c6520636c6173733d2273697a696e672d626f78222063783d22323030222060408201527f63793d223230302220723d2231333022202f3e202020203c2f673e202020203c60608201527f672069643d22686f757222207472616e73666f726d203d2022726f7461746528608082015250565b6000612fdc60a083612e60565b9150612fe782612f0e565b60a082019050919050565b7f202029223e2020202020203c7061746820636c6173733d22686f75722d61726d60008201527f2220643d224d323030203230305631343022202f3e2020202020203c6369726360208201527f6c6520636c6173733d2273697a696e672d626f78222063783d2232303022206360408201527f793d223230302220723d2231333022202f3e202020203c2f673e202000000000606082015250565b600061309a607c83612e60565b91506130a582612ff2565b607c82019050919050565b60006130bb82612eba565b91506130c78285612edd565b91506130d282612fcf565b91506130de8284612edd565b91506130e98261308d565b91508190509392505050565b60006131018286612edd565b915061310d8285612edd565b91506131198284612edd565b9150819050949350505050565b7f7b226e616d65223a20224d6f6d656e74204e4654222c2022646573637269707460008201527f696f6e223a202246756c6c79206f6e2d636861696e20636c6f636b204e46542060208201527f746861742073686f777320796f75207468652063757272656e742074696d652e60408201527f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b60608201527f6261736536342c00000000000000000000000000000000000000000000000000608082015250565b60006131f4608783612e60565b91506131ff82613126565b608782019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b6000613240600283612e60565b915061324b8261320a565b600282019050919050565b6000613261826131e7565b915061326d8284612edd565b915061327882613233565b915081905092915050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b60006132b9601d83612e60565b91506132c482613283565b601d82019050919050565b60006132da826132ac565b91506132e68284612edd565b915081905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b600061332760148361220d565b9150613332826132f1565b602082019050919050565b600060208201905081810360008301526133568161331a565b9050919050565b7f416c726561647920436c61696d65640000000000000000000000000000000000600082015250565b6000613393600f8361220d565b915061339e8261335d565b602082019050919050565b600060208201905081810360008301526133c281613386565b9050919050565b60006133d4826122bd565b91506133df836122bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561341457613413612ba8565b5b828201905092915050565b600061342a826122bd565b9150613435836122bd565b92508282101561344857613447612ba8565b5b828203905092915050565b600061345e826122bd565b9150613469836122bd565b92508261347957613478612b79565b5b828206905092915050565b600061348f826122bd565b915061349a836122bd565b9250826134aa576134a9612b79565b5b828204905092915050565b60006134c0826122bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134f3576134f2612ba8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613538826122bd565b9150613543836122bd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561357c5761357b612ba8565b5b828202905092915050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b60006135bd600e8361220d565b91506135c882613587565b602082019050919050565b600060208201905081810360008301526135ec816135b0565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f203c7376672077696474683d2234303022206865696768743d22343030222076696577426f783d223020302034303020343030222066696c6c3d226e6f6e652220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e202020203c6465663e2020202020203c7374796c653e2020202020202e6d696e7574652d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20234133413341333b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d2020202020202e686f75722d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20236666663b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d202020202020236d696e7574652c23686f7572207b20202020202020207472616e73666f726d2d6f726967696e3a2032303070782032303070783b2020202020207d202020203c2f7374796c653e202020203c2f6465663e202020203c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d22776869746522202f3e202020203c636972636c652063783d22323030222063793d223230302220723d2231343722207374726f6b653d22626c61636b22207374726f6b652d77696474683d223622202f3e202020203c636972636c652063783d22323030222063793d223230302220723d22313435222066696c6c3d22626c61636b22207374726f6b653d222333393339333922207374726f6b652d77696474683d223222202f3e202020203c6d61736b2069643d226d61736b305f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2236312220793d223631222077696474683d2232373822206865696768743d22323738223e2020202020203c7265637420783d223139382220793d223631222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223139382220793d22333031222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2236312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d39302036312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223330312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3930203330312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223133322e3233322220793d223332312e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203133322e323332203332312e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223235322e3233322220793d223131332e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203235322e323332203131332e35333129222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2238302e363232342220793d223237312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3132302038302e36323234203237312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238382e3436392220793d223135312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313230203238382e343639203135312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2237382e363232342220793d223133322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d36302037382e36323234203133322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238362e3436392220793d223235322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3630203238362e343639203235322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223237312e3233322220793d223331392e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203237312e323332203331392e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223135312e3233322220793d223131312e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203135312e323332203131312e35333129222066696c6c3d222343344334433422202f3e202020203c2f6d61736b3e202020203c67206d61736b3d2275726c28236d61736b305f375f363129223e2020202020203c6d61736b2069643d226d61736b315f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2234352220793d223431222077696474683d2233323422206865696768743d22333136223e20202020202020203c7265637420783d2234352220793d223431222077696474683d2233323422206865696768743d22333136222066696c6c3d2275726c28237061696e74305f6c696e6561725f375f36312922202f3e2020202020203c2f6d61736b3e2020202020203c67206d61736b3d2275726c28236d61736b315f375f363129223e20202020202020203c7265637420783d2231332220793d2239222077696474683d2233383722206865696768743d22333539222066696c6c3d222346353834464622202f3e20202020202020203c672066696c7465723d2275726c282366696c746572305f665f375f363129223e202020202020202020203c636972636c652063783d2238322e35222063793d223131372e352220723d223131372e35222066696c6c3d222346463834434522202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572315f665f375f363129223e202020202020202020203c636972636c652063783d223334392e35222063793d223233392e352220723d223131372e35222066696c6c3d222338344137464622202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572325f665f375f363129223e202020202020202020203c636972636c652063783d223131332e35222063793d223334352e352220723d223131372e35222066696c6c3d222345303931393122202f3e20202020202020203c2f673e2020202020203c2f673e202020203c2f673e203c636972636c652063783d22323030222063793d223230302220723d2235222066696c6c3d22776869746522202f3e202020203c646566733e2020202020203c66696c7465722069643d2266696c746572305f665f375f36312220783d222d3133352220793d222d313030222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572315f665f375f36312220783d223133322220793d223232222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572325f665f375f36312220783d222d3130342220793d22313238222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c6c696e6561724772616469656e742069643d227061696e74305f6c696e6561725f375f3631222078313d22323037222079313d223431222078323d22323037222079323d2233353722206772616469656e74556e6974733d227573657253706163654f6e557365223e20202020202020203c73746f702073746f702d636f6c6f723d222346463834434522202f3e20202020202020203c73746f70206f66667365743d2231222073746f702d636f6c6f723d222339323344464622202f3e2020202020203c2f6c696e6561724772616469656e743e202020203c2f646566733e20203c2f7376673ea264697066735822122013b3b766b1b4bbe2a8f3f6de3004d187041653d7c5a60bae5d8b939e22b4799d64736f6c634300080a0033",
      "deployedBytecode": "0x60806040526004361061019c5760003560e01c80636352211e116100ec578063c87b56dd1161008a578063ce9ecbd111610064578063ce9ecbd11461064b578063d082e38114610674578063db819ade1461069f578063e985e9c5146106bb5761019c565b8063c87b56dd14610594578063c884ef83146105d1578063cdc1d7921461060e5761019c565b80637c6d56a6116100c65780637c6d56a6146104da57806395d89b4114610517578063a22cb46514610542578063b88d4fde1461056b5761019c565b80636352211e14610423578063679133401461046057806370a082311461049d5761019c565b806323b872dd116101595780633afbf251116101335780633afbf251146103695780633ccfd60b146103a65780633fb2b692146103bd57806342842e0e146103fa5761019c565b806323b872dd146102c557806328134e23146102ee5780633af9e89c1461032c5761019c565b806301ffc9a7146101a157806306fdde03146101de578063081812fc14610209578063095ea7b3146102465780631581b6001461026f57806315d655c91461029a575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c3919061219f565b6106f8565b6040516101d591906121e7565b60405180910390f35b3480156101ea57600080fd5b506101f361078a565b604051610200919061229b565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b91906122f3565b610818565b60405161023d9190612361565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906123a8565b61084b565b005b34801561027b57600080fd5b50610284610a34565b6040516102919190612361565b60405180910390f35b3480156102a657600080fd5b506102af610a58565b6040516102bc91906123f7565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190612412565b610a7c565b005b3480156102fa57600080fd5b50610315600480360381019061031091906122f3565b610e7c565b604051610323929190612481565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e91906122f3565b610eca565b60405161036091906124aa565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b91906122f3565b610eea565b60405161039d91906124aa565b60405180910390f35b3480156103b257600080fd5b506103bb610f0a565b005b3480156103c957600080fd5b506103e460048036038101906103df91906124c5565b610f73565b6040516103f191906123f7565b60405180910390f35b34801561040657600080fd5b50610421600480360381019061041c9190612412565b610f8b565b005b34801561042f57600080fd5b5061044a600480360381019061044591906122f3565b6110c3565b6040516104579190612361565b60405180910390f35b34801561046c57600080fd5b50610487600480360381019061048291906122f3565b6110f6565b6040516104949190612361565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf91906124c5565b611133565b6040516104d191906123f7565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc91906124c5565b61114b565b60405161050e91906123f7565b60405180910390f35b34801561052357600080fd5b5061052c611194565b604051610539919061229b565b60405180910390f35b34801561054e57600080fd5b506105696004803603810190610564919061251e565b611222565b005b34801561057757600080fd5b50610592600480360381019061058d9190612693565b61131f565b005b3480156105a057600080fd5b506105bb60048036038101906105b691906122f3565b61145a565b6040516105c8919061229b565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f391906124c5565b6116b7565b60405161060591906121e7565b60405180910390f35b34801561061a57600080fd5b50610635600480360381019061063091906122f3565b6116d7565b6040516106429190612361565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190612742565b61170a565b005b34801561068057600080fd5b5061068961176d565b60405161069691906123f7565b60405180910390f35b6106b960048036038101906106b49190612795565b611773565b005b3480156106c757600080fd5b506106e260048036038101906106dd91906127d5565b611a3e565b6040516106ef91906121e7565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107835750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461079790612844565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390612844565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109435750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610979906128c2565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b149061292e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b849061299a565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c4d5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610cb657506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906128c2565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080600a600084815260200190815260200160002060009054906101000a900460000b600b600085815260200190815260200160002060009054906101000a900460000b91509150915091565b600a6020528060005260406000206000915054906101000a900460000b81565b600b6020528060005260406000206000915054906101000a900460000b81565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f70573d6000803e3d6000fd5b50565b60086020528060005260406000206000915090505481565b610f96838383610a7c565b60008273ffffffffffffffffffffffffffffffffffffffff163b148061107f575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161101b939291906129f1565b6020604051808303816000875af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612ac9565b60405180910390fd5b505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546111a190612844565b80601f01602080910402602001604051908101604052809291908181526020018280546111cd90612844565b801561121a5780601f106111ef5761010080835404028352916020019161121a565b820191906000526020600020905b8154815290600101906020018083116111fd57829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161131391906121e7565b60405180910390a35050565b61132a848484610a7c565b60008373ffffffffffffffffffffffffffffffffffffffff163b1480611415575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016113b19493929190612b2d565b6020604051808303816000875af11580156113d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f49190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144b90612ac9565b60405180910390fd5b50505050565b60606000603c600b600085815260200190815260200160002060009054906101000a900460000b61148b9190612bd7565b60000b600a600085815260200190815260200160002060009054906101000a900460000b60000b6114bb42611a6d565b6114c59190612c4b565b6114cf9190612c4b565b905060008112156114ea578060186114e79190612c4b565b90505b6000600b600085815260200190815260200160002060009054906101000a900460000b60000b61151942611aa1565b6115239190612c4b565b9050600061153042611ad0565b90506000600c6006846115439190612cdf565b61154d9190612df6565b600c6101688661155d9190612cdf565b6115679190612df6565b6115719190612c4b565b90506000603c6006846115849190612cdf565b61158e9190612df6565b603c6101688661159e9190612cdf565b6115a89190612df6565b6115b29190612c4b565b905060006115bf83611ae9565b905060006115cc83611ae9565b9050600081836040516020016115e39291906130b0565b6040516020818303038152906040529050600060405180610b000160405280610acf8152602001613634610acf9139826040518061060001604052806105d781526020016141036105d79139604051602001611641939291906130f5565b6040516020818303038152906040529050600061168461166083611c4a565b6040516020016116709190613256565b604051602081830303815290604052611c4a565b90508060405160200161169791906132cf565b6040516020818303038152906040529a5050505050505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82600a600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600b600083815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550505050565b60065481565b7f00000000000000000000000000000000000000000000000000000000000000003410156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd9061333d565b60405180910390fd5b60001515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611869576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611860906133a9565b60405180910390fd5b61187533600654611de9565b611882828260065461170a565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503360096000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006547f8473e948bcf25e455d9d6476037e3b847d78f2411a8481e70d546afce6a7579160405160405180910390a260016006546119b291906133c9565b60068190555060007f0000000000000000000000000000000000000000000000000000000000000000346119e6919061341f565b90506000811115611a39573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a37573d6000803e3d6000fd5b505b505050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806201518063ffffffff1683611a859190613453565b9050610e1061ffff1681611a999190613484565b915050919050565b600080610e1061ffff1683611ab69190613453565b9050603c60ff1681611ac89190613484565b915050919050565b6000603c60ff1682611ae29190613453565b9050919050565b60606000821415611b31576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611c45565b600082905060005b60008214611b63578080611b4c906134b5565b915050600a82611b5c9190613484565b9150611b39565b60008167ffffffffffffffff811115611b7f57611b7e612568565b5b6040519080825280601f01601f191660200182016040528015611bb15781602001600182028036833780820191505090505b5090505b60008514611c3e57600182611bca919061341f565b9150600a85611bd99190613453565b6030611be591906133c9565b60f81b818381518110611bfb57611bfa6134fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611c379190613484565b9450611bb5565b8093505050505b919050565b606060006040518060600160405280604081526020016135f46040913990506000835190506000811415611c91576040518060200160405280600081525092505050611de4565b60006003600283611ca291906133c9565b611cac9190613484565b6004611cb8919061352d565b90506000602082611cc991906133c9565b67ffffffffffffffff811115611ce257611ce1612568565b5b6040519080825280601f01601f191660200182016040528015611d145781602001600182028036833780820191505090505b5090506000849050600181016020830160005b86811015611da05760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b90508084526004840193505050611d27565b506003860660018114611dba5760028114611dca57611dd5565b613d3d60f01b6002830352611dd5565b603d60f81b60018303525b50848452505081955050505050505b919050565b611df38282611f20565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480611edd575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401611e79939291906129f1565b6020604051808303816000875af1158015611e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebc9190612a50565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1390612ac9565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f879061299a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612032576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612029906135d3565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61217c81612147565b811461218757600080fd5b50565b60008135905061219981612173565b92915050565b6000602082840312156121b5576121b461213d565b5b60006121c38482850161218a565b91505092915050565b60008115159050919050565b6121e1816121cc565b82525050565b60006020820190506121fc60008301846121d8565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561223c578082015181840152602081019050612221565b8381111561224b576000848401525b50505050565b6000601f19601f8301169050919050565b600061226d82612202565b612277818561220d565b935061228781856020860161221e565b61229081612251565b840191505092915050565b600060208201905081810360008301526122b58184612262565b905092915050565b6000819050919050565b6122d0816122bd565b81146122db57600080fd5b50565b6000813590506122ed816122c7565b92915050565b6000602082840312156123095761230861213d565b5b6000612317848285016122de565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061234b82612320565b9050919050565b61235b81612340565b82525050565b60006020820190506123766000830184612352565b92915050565b61238581612340565b811461239057600080fd5b50565b6000813590506123a28161237c565b92915050565b600080604083850312156123bf576123be61213d565b5b60006123cd85828601612393565b92505060206123de858286016122de565b9150509250929050565b6123f1816122bd565b82525050565b600060208201905061240c60008301846123e8565b92915050565b60008060006060848603121561242b5761242a61213d565b5b600061243986828701612393565b935050602061244a86828701612393565b925050604061245b868287016122de565b9150509250925092565b60008160000b9050919050565b61247b81612465565b82525050565b60006040820190506124966000830185612472565b6124a36020830184612472565b9392505050565b60006020820190506124bf6000830184612472565b92915050565b6000602082840312156124db576124da61213d565b5b60006124e984828501612393565b91505092915050565b6124fb816121cc565b811461250657600080fd5b50565b600081359050612518816124f2565b92915050565b600080604083850312156125355761253461213d565b5b600061254385828601612393565b925050602061255485828601612509565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125a082612251565b810181811067ffffffffffffffff821117156125bf576125be612568565b5b80604052505050565b60006125d2612133565b90506125de8282612597565b919050565b600067ffffffffffffffff8211156125fe576125fd612568565b5b61260782612251565b9050602081019050919050565b82818337600083830152505050565b6000612636612631846125e3565b6125c8565b90508281526020810184848401111561265257612651612563565b5b61265d848285612614565b509392505050565b600082601f83011261267a5761267961255e565b5b813561268a848260208601612623565b91505092915050565b600080600080608085870312156126ad576126ac61213d565b5b60006126bb87828801612393565b94505060206126cc87828801612393565b93505060406126dd878288016122de565b925050606085013567ffffffffffffffff8111156126fe576126fd612142565b5b61270a87828801612665565b91505092959194509250565b61271f81612465565b811461272a57600080fd5b50565b60008135905061273c81612716565b92915050565b60008060006060848603121561275b5761275a61213d565b5b60006127698682870161272d565b935050602061277a8682870161272d565b925050604061278b868287016122de565b9150509250925092565b600080604083850312156127ac576127ab61213d565b5b60006127ba8582860161272d565b92505060206127cb8582860161272d565b9150509250929050565b600080604083850312156127ec576127eb61213d565b5b60006127fa85828601612393565b925050602061280b85828601612393565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061285c57607f821691505b602082108114156128705761286f612815565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006128ac600e8361220d565b91506128b782612876565b602082019050919050565b600060208201905081810360008301526128db8161289f565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612918600a8361220d565b9150612923826128e2565b602082019050919050565b600060208201905081810360008301526129478161290b565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b600061298460118361220d565b915061298f8261294e565b602082019050919050565b600060208201905081810360008301526129b381612977565b9050919050565b600082825260208201905092915050565b50565b60006129db6000836129ba565b91506129e6826129cb565b600082019050919050565b6000608082019050612a066000830186612352565b612a136020830185612352565b612a2060408301846123e8565b8181036060830152612a31816129ce565b9050949350505050565b600081519050612a4a81612173565b92915050565b600060208284031215612a6657612a6561213d565b5b6000612a7484828501612a3b565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000612ab360108361220d565b9150612abe82612a7d565b602082019050919050565b60006020820190508181036000830152612ae281612aa6565b9050919050565b600081519050919050565b6000612aff82612ae9565b612b0981856129ba565b9350612b1981856020860161221e565b612b2281612251565b840191505092915050565b6000608082019050612b426000830187612352565b612b4f6020830186612352565b612b5c60408301856123e8565b8181036060830152612b6e8184612af4565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612be282612465565b9150612bed83612465565b925082612bfd57612bfc612b79565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083141615612c3657612c35612ba8565b5b828205905092915050565b6000819050919050565b6000612c5682612c41565b9150612c6183612c41565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615612c9c57612c9b612ba8565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615612cd457612cd3612ba8565b5b828201905092915050565b6000612cea82612c41565b9150612cf583612c41565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612d3457612d33612ba8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612d7157612d70612ba8565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615612dae57612dad612ba8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615612deb57612dea612ba8565b5b828202905092915050565b6000612e0182612c41565b9150612e0c83612c41565b925082612e1c57612e1b612b79565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612e5557612e54612ba8565b5b828205905092915050565b600081905092915050565b7f203c672069643d226d696e75746522207472616e73666f726d203d2022726f7460008201527f6174652800000000000000000000000000000000000000000000000000000000602082015250565b6000612ec7602483612e60565b9150612ed282612e6b565b602482019050919050565b6000612ee882612202565b612ef28185612e60565b9350612f0281856020860161221e565b80840191505092915050565b7f202029223e2020202020203c7061746820636c6173733d226d696e7574652d6160008201527f726d2220643d224d3230302032303056373822202f3e2020202020203c63697260208201527f636c6520636c6173733d2273697a696e672d626f78222063783d22323030222060408201527f63793d223230302220723d2231333022202f3e202020203c2f673e202020203c60608201527f672069643d22686f757222207472616e73666f726d203d2022726f7461746528608082015250565b6000612fdc60a083612e60565b9150612fe782612f0e565b60a082019050919050565b7f202029223e2020202020203c7061746820636c6173733d22686f75722d61726d60008201527f2220643d224d323030203230305631343022202f3e2020202020203c6369726360208201527f6c6520636c6173733d2273697a696e672d626f78222063783d2232303022206360408201527f793d223230302220723d2231333022202f3e202020203c2f673e202000000000606082015250565b600061309a607c83612e60565b91506130a582612ff2565b607c82019050919050565b60006130bb82612eba565b91506130c78285612edd565b91506130d282612fcf565b91506130de8284612edd565b91506130e98261308d565b91508190509392505050565b60006131018286612edd565b915061310d8285612edd565b91506131198284612edd565b9150819050949350505050565b7f7b226e616d65223a20224d6f6d656e74204e4654222c2022646573637269707460008201527f696f6e223a202246756c6c79206f6e2d636861696e20636c6f636b204e46542060208201527f746861742073686f777320796f75207468652063757272656e742074696d652e60408201527f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b60608201527f6261736536342c00000000000000000000000000000000000000000000000000608082015250565b60006131f4608783612e60565b91506131ff82613126565b608782019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b6000613240600283612e60565b915061324b8261320a565b600282019050919050565b6000613261826131e7565b915061326d8284612edd565b915061327882613233565b915081905092915050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b60006132b9601d83612e60565b91506132c482613283565b601d82019050919050565b60006132da826132ac565b91506132e68284612edd565b915081905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b600061332760148361220d565b9150613332826132f1565b602082019050919050565b600060208201905081810360008301526133568161331a565b9050919050565b7f416c726561647920436c61696d65640000000000000000000000000000000000600082015250565b6000613393600f8361220d565b915061339e8261335d565b602082019050919050565b600060208201905081810360008301526133c281613386565b9050919050565b60006133d4826122bd565b91506133df836122bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561341457613413612ba8565b5b828201905092915050565b600061342a826122bd565b9150613435836122bd565b92508282101561344857613447612ba8565b5b828203905092915050565b600061345e826122bd565b9150613469836122bd565b92508261347957613478612b79565b5b828206905092915050565b600061348f826122bd565b915061349a836122bd565b9250826134aa576134a9612b79565b5b828204905092915050565b60006134c0826122bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134f3576134f2612ba8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613538826122bd565b9150613543836122bd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561357c5761357b612ba8565b5b828202905092915050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b60006135bd600e8361220d565b91506135c882613587565b602082019050919050565b600060208201905081810360008301526135ec816135b0565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f203c7376672077696474683d2234303022206865696768743d22343030222076696577426f783d223020302034303020343030222066696c6c3d226e6f6e652220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e202020203c6465663e2020202020203c7374796c653e2020202020202e6d696e7574652d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20234133413341333b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d2020202020202e686f75722d61726d207b202020202020202066696c6c3a206e6f6e653b20202020202020207374726f6b653a20236666663b20202020202020207374726f6b652d77696474683a20363b20202020202020207374726f6b652d6d697465726c696d69743a20383b2020202020207d202020202020236d696e7574652c23686f7572207b20202020202020207472616e73666f726d2d6f726967696e3a2032303070782032303070783b2020202020207d202020203c2f7374796c653e202020203c2f6465663e202020203c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d22776869746522202f3e202020203c636972636c652063783d22323030222063793d223230302220723d2231343722207374726f6b653d22626c61636b22207374726f6b652d77696474683d223622202f3e202020203c636972636c652063783d22323030222063793d223230302220723d22313435222066696c6c3d22626c61636b22207374726f6b653d222333393339333922207374726f6b652d77696474683d223222202f3e202020203c6d61736b2069643d226d61736b305f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2236312220793d223631222077696474683d2232373822206865696768743d22323738223e2020202020203c7265637420783d223139382220793d223631222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223139382220793d22333031222077696474683d223422206865696768743d223338222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2236312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d39302036312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223330312220793d22323032222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3930203330312032303229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223133322e3233322220793d223332312e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203133322e323332203332312e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223235322e3233322220793d223131332e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313530203235322e323332203131332e35333129222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2238302e363232342220793d223237312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3132302038302e36323234203237312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238382e3436392220793d223135312e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d313230203238382e343639203135312e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d2237382e363232342220793d223133322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d36302037382e36323234203133322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223238362e3436392220793d223235322e323332222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f74617465282d3630203238362e343639203235322e32333229222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223237312e3233322220793d223331392e333738222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203237312e323332203331392e33373829222066696c6c3d222343344334433422202f3e2020202020203c7265637420783d223135312e3233322220793d223131312e353331222077696474683d223422206865696768743d22333822207472616e73666f726d3d22726f7461746528313530203135312e323332203131312e35333129222066696c6c3d222343344334433422202f3e202020203c2f6d61736b3e202020203c67206d61736b3d2275726c28236d61736b305f375f363129223e2020202020203c6d61736b2069643d226d61736b315f375f363122207374796c653d226d61736b2d747970653a616c70686122206d61736b556e6974733d227573657253706163654f6e5573652220783d2234352220793d223431222077696474683d2233323422206865696768743d22333136223e20202020202020203c7265637420783d2234352220793d223431222077696474683d2233323422206865696768743d22333136222066696c6c3d2275726c28237061696e74305f6c696e6561725f375f36312922202f3e2020202020203c2f6d61736b3e2020202020203c67206d61736b3d2275726c28236d61736b315f375f363129223e20202020202020203c7265637420783d2231332220793d2239222077696474683d2233383722206865696768743d22333539222066696c6c3d222346353834464622202f3e20202020202020203c672066696c7465723d2275726c282366696c746572305f665f375f363129223e202020202020202020203c636972636c652063783d2238322e35222063793d223131372e352220723d223131372e35222066696c6c3d222346463834434522202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572315f665f375f363129223e202020202020202020203c636972636c652063783d223334392e35222063793d223233392e352220723d223131372e35222066696c6c3d222338344137464622202f3e20202020202020203c2f673e20202020202020203c672066696c7465723d2275726c282366696c746572325f665f375f363129223e202020202020202020203c636972636c652063783d223131332e35222063793d223334352e352220723d223131372e35222066696c6c3d222345303931393122202f3e20202020202020203c2f673e2020202020203c2f673e202020203c2f673e203c636972636c652063783d22323030222063793d223230302220723d2235222066696c6c3d22776869746522202f3e202020203c646566733e2020202020203c66696c7465722069643d2266696c746572305f665f375f36312220783d222d3133352220793d222d313030222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572315f665f375f36312220783d223133322220793d223232222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c66696c7465722069643d2266696c746572325f665f375f36312220783d222d3130342220793d22313238222077696474683d2234333522206865696768743d22343335222066696c746572556e6974733d227573657253706163654f6e557365222020202020202020636f6c6f722d696e746572706f6c6174696f6e2d66696c746572733d2273524742223e20202020202020203c6665466c6f6f6420666c6f6f642d6f7061636974793d22302220726573756c743d224261636b67726f756e64496d61676546697822202f3e20202020202020203c6665426c656e64206d6f64653d226e6f726d616c2220696e3d22536f75726365477261706869632220696e323d224261636b67726f756e64496d6167654669782220726573756c743d22736861706522202f3e20202020202020203c6665476175737369616e426c757220737464446576696174696f6e3d2235302220726573756c743d22656666656374315f666f726567726f756e64426c75725f375f363122202f3e2020202020203c2f66696c7465723e2020202020203c6c696e6561724772616469656e742069643d227061696e74305f6c696e6561725f375f3631222078313d22323037222079313d223431222078323d22323037222079323d2233353722206772616469656e74556e6974733d227573657253706163654f6e557365223e20202020202020203c73746f702073746f702d636f6c6f723d222346463834434522202f3e20202020202020203c73746f70206f66667365743d2231222073746f702d636f6c6f723d222339323344464622202f3e2020202020203c2f6c696e6561724772616469656e743e202020203c2f646566733e20203c2f7376673ea264697066735822122013b3b766b1b4bbe2a8f3f6de3004d187041653d7c5a60bae5d8b939e22b4799d64736f6c634300080a0033",
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [
          {
            "astId": 231,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 233,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 244,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "balanceOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 248,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "ownerOf",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 252,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "getApproved",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 258,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "isApprovedForAll",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 730,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "tokenCounter",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 755,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "claimed",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 759,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "userNFTTokenId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 763,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "ownerOfNFTId",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 767,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "timeZoneHour",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_int8)"
          },
          {
            "astId": 771,
            "contract": "contracts/momentNFT.sol:momentNFT",
            "label": "timeZoneMin",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_int8)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int8": {
            "encoding": "inplace",
            "label": "int8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_int8)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => int8)",
            "numberOfBytes": "32",
            "value": "t_int8"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}